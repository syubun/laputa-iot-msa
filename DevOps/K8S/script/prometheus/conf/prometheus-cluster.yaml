# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
# - "first_rules.yml"
# - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['prometheus:9090']

  - job_name: 'nacos'
    metrics_path: '/nacos/actuator/prometheus'
    static_configs:
      - targets: ["nacos-0.nacos.default.svc.cluster.local:8848","nacos-1.nacos.default.svc.cluster.local:8848","nacos-2.nacos.default.svc.cluster.local:8848"]

  # zipkin
  - job_name: 'zipkin'
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets: ['zipkin:9411']
    metric_relabel_configs:
        # Response code count
        - source_labels: [__name__]
          regex: '^status_(\d+)_(.*)$'
          replacement: '${1}'
          target_label: status
        - source_labels: [__name__]
          regex: '^status_(\d+)_(.*)$'
          replacement: '${2}'
          target_label: path
        - source_labels: [__name__]
          regex: '^status_(\d+)_(.*)$'
          replacement: 'http_requests_total'
          target_label: __name__