/*
 Navicat Premium Data Transfer

 Source Server         : 腾讯云
 Source Server Type    : MySQL
 Source Server Version : 80024
 Source Host           : 129.211.7.213:3306
 Source Schema         : base_config

 Target Server Type    : MySQL
 Target Server Version : 80024
 File Encoding         : 65001

 Date: 10/07/2021 15:43:59
*/
CREATE DATABASE IF NOT EXISTS base_config DEFAULT CHARACTER SET utf8 DEFAULT COLLATE utf8_general_ci;
create user 'laputa'@'%' identified by 'Laputa@123456';
grant all privileges on base_config.* to 'laputa'@'%';
flush privileges;

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 136 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (27, 'mogu-admin.yaml', 'dev', '#app\r\nserver:\r\n  port: 8601\r\n\r\n#阿里大于\r\ntemplateCode: SMS_XXXXXX #短信模板编号\r\nsignName: 蘑菇博客\r\n#项目名称\r\nPROJECT_NAME: 蘑菇博客\r\n\r\nfile:\r\n  upload:\r\n    path: D:/mogu_blog/data/\r\n\r\n# 邮箱验证\r\nmoguBlog:\r\n  email: mogublog@163.com\r\n\r\n# 蘑菇博客登录默认密码\r\nDEFAULE_PWD: mogu2018\r\n\r\n#博客相关配置\r\nBLOG:\r\n  HOT_COUNT: 5 #热门博客数量\r\n  NEW_COUNT: 15 #最新博客数据\r\n  FIRST_COUNT: 5 #一级推荐\r\n  SECOND_COUNT: 2 #二级推荐\r\n  THIRD_COUNT: 3 #三级推荐\r\n  FOURTH_COUNT: 5 #四级推荐\r\n\r\n#spring\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  jmx:\r\n    default-domain: mogu_admin\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-admin\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 20\r\n    minIdle: 5\r\n    maxActive: 200\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    validationQuery: SELECT 1 FROM DUAL\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8601\r\n\r\n##eureka相关配置\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    registerWithEureka: true\r\n#    fetchRegistry: true\r\n#    serviceUrl:\r\n#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n  \r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848\r\n\r\n\r\n# 或者：\r\nfeign.hystrix.enabled: false #索性禁用feign的hystrix支持\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n\r\n##jwt配置\r\ntokenHead: bearer_\r\ntokenHeader: Authorization\r\nisRememberMeExpiresSecond: 259200 #记住账号为3天有效\r\naudience:\r\n  clientId: 098f6bcd4621d373cade4e832627b4f6\r\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\r\n  name: mogublog\r\n  expiresSecond: 3600  #1个小时 3600\r\n  refreshSecond: 300 # 刷新token的时间 5分钟', 'ce8eef81522776ceefe77d670af17d49', '2020-06-20 09:47:10', '2020-06-20 09:47:10', NULL, '0:0:0:0:0:0:0:1', '', 'f431bd53-e6c6-451c-803c-b32712f38562', '蘑菇博客 admin  dev配置', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (28, 'mogu-gateway.yaml', 'dev', 'server:\r\n  port: 8607\r\n\r\nspring:\r\n  application:\r\n    name: mogu-gateway\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848\r\n      config:\r\n        server-addr: 192.168.6.189:8848\r\n        file-extension: yaml\r\n        group: dev\r\n', 'b3aafe1d3548e30b9a50e5b83e76322c', '2020-06-20 09:53:50', '2020-06-20 09:53:50', NULL, '0:0:0:0:0:0:0:1', '', 'f431bd53-e6c6-451c-803c-b32712f38562', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (29, 'mogu-monitor.yaml', 'dev', 'server:\r\n  port: 8606\r\n\r\nspring:\r\n  application:\r\n    name: mogu-monitor\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      ui:\r\n        title: 蘑菇博客监控中心\r\n        brand: 蘑菇博客监控中心\r\n      notify:\r\n        mail:\r\n          enabled: false\r\n          # 服务上下线会自动发送邮件\r\n          #from: mogublog@163.com\r\n          #to: moxi0624@163.com\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com\r\n    password: a1313375 #授权码开启SMTP服务里设置\r\n    host: smtp.163.com\r\n\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n            required: true\r\n          ssl:\r\n            enable: true\r\n\r\n#eureka相关配置\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    serviceUrl:\r\n#      defaultZone: http://user:password123@localhost:8761/eureka\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    health-check-url-path: /actuator/health\r\n#    metadata-map:\r\n#      user.name: admin\r\n#      user.password: 123456\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848', '2fa47a5fe46b4bff73827e388adff194', '2020-06-20 09:54:17', '2020-06-20 09:54:17', NULL, '0:0:0:0:0:0:0:1', '', 'f431bd53-e6c6-451c-803c-b32712f38562', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (30, 'mogu-picture.yaml', 'dev', '#app\r\nserver:\r\n  port: 8602\r\n\r\nfile:\r\n  upload:\r\n    path: D:/mogu_blog/data/\r\n\r\n#spring\r\nspring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      max-file-size: 100MB # 修改单次文件上传文件大小不能超过100MB\r\n      max-request-size: 500MB # 设置单次文件请求总大小不能超过500MB\r\n\r\n  jmx:\r\n    default-domain: mogu_picture\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-picture\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8602\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_picture?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n  mvc:\r\n    static-path-pattern: /upload/**\r\n  resources:\r\n    static-locations: classpath:/static/upload\r\n\r\n# eureka:\r\n#   client:\r\n#     healthcheck:\r\n#       enabled: true\r\n#     registerWithEureka: true\r\n#     fetchRegistry: true\r\n#     serviceUrl:\r\n#       defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#   instance:\r\n#     prefer-ip-address: true\r\n#     instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#     lease-renewal-interval-in-seconds: 5\r\n#     appname: mogu-picture\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.picture.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false', 'ae1488fad68d12c0c21657b10cc786ee', '2020-06-20 09:54:42', '2020-06-20 09:54:42', NULL, '0:0:0:0:0:0:0:1', '', 'f431bd53-e6c6-451c-803c-b32712f38562', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (31, 'mogu-sms.yaml', 'dev', '#app\r\nserver:\r\n  port: 8604\r\n\r\n#阿里大于\r\naccessKeyId: XXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\naccessKeySecret: XXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_sms\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-sms\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  #RabbitMq\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com\r\n    password: a1313375 #授权码开启SMTP服务里设置\r\n    host: smtp.163.com\r\n    default-encoding: UTF-8\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          ssl:\r\n            enable: true\r\n          socketFactory:\r\n            port: 465\r\n            class: javax.net.ssl.SSLSocketFactory\r\n          auth: true\r\n          starttls:\r\n            enable: false\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8604\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    serviceUrl:\r\n#      defaultZone: http://user:password123@localhost:8761/eureka\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always', 'c305f6be9a4ba0cad2103891517aa4af', '2020-06-20 09:55:01', '2020-06-20 09:55:01', NULL, '0:0:0:0:0:0:0:1', '', 'f431bd53-e6c6-451c-803c-b32712f38562', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (32, 'mogu-spider.yaml', 'dev', '#app\r\nserver:\r\n  port: 8608\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_spider\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-spider\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8608\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    registerWithEureka: true\r\n#    fetchRegistry: true\r\n#    serviceUrl:\r\n#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n#    appname: mogu-spider\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.spider.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false', '93264bdf76cc2b0384ce28d2f2463811', '2020-06-20 09:55:19', '2020-06-20 09:55:19', NULL, '0:0:0:0:0:0:0:1', '', 'f431bd53-e6c6-451c-803c-b32712f38562', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (33, 'mogu-web.yaml', 'dev', '#app\r\nserver:\r\n  port: 8603\r\n\r\n#阿里大于\r\ntemplateCode: SMS_XXXXXX #短信模板编号\r\n\r\nsignName: 蘑菇博客\r\n# 项目英文名\r\nPROJECT_NAME_EN: moguBlog\r\n#项目名称\r\nPROJECT_NAME: 蘑菇博客\r\n\r\ndata:\r\n  # 门户页面\r\n  webSite:\r\n    url: http://localhost:9527/#/\r\n  # mogu_web网址，用于第三方登录回调\r\n  web:\r\n    url: http://127.0.0.1:8603\r\n\r\nfile:\r\n  upload:\r\n    path: D:/mogu_blog/data/\r\n\r\n# 蘑菇博客登录默认密码\r\nDEFAULE_PWD: mogu2018\r\n\r\n#请求限制参数\r\nrequest-limit:\r\n  start: false # 是否开启请求限制，默认关闭\r\n  amount: 100 # 100次\r\n  time: 60000 # 1分钟\r\n\r\n#博客相关配置\r\nBLOG:\r\n  HOT_COUNT: 5 #热门博客数量\r\n  HOT_TAG_COUNT: 20 #热门标签数量\r\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\r\n  NEW_COUNT: 15 #最新博客数据\r\n  FIRST_COUNT: 5 #一级推荐\r\n  SECOND_COUNT: 2 #二级推荐\r\n  THIRD_COUNT: 3 #三级推荐\r\n  FOURTH_COUNT: 5 #四级推荐\r\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\r\n\r\n  # 原创模板\r\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\r\n  # 转载模板\r\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 %S ，版权归 %S 所有，如果侵权之处，请联系博主进行删除，谢谢~\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_web\r\n  # freemarker相关配置\r\n  freemarker:\r\n    charset: utf-8\r\n    suffix: .ftl\r\n    content-type: text/html\r\n    template-loader-path: classpath:/templates\r\n  # jackson配置响应时间格式、时区\r\n  jackson:\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n\r\n  application:\r\n    name: mogu-web\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    # 初始化大小，最小，最大\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 50\r\n\r\n    #连接等待超时时间\r\n    maxWait: 60000\r\n\r\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\r\n    timeBetweenEvictionRunsMillis: 60000\r\n\r\n    #配置连接在池中的最小生存时间\r\n    minEvictableIdleTimeMillis: 300000\r\n\r\n    dbcp:\r\n      remove-abandoned: true\r\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\r\n      remove-abandoned-timeout: 180\r\n\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\n  #Solr配置信息\r\n  data:\r\n    solr:\r\n      host: http://localhost:8080/solr\r\n      core: collection1\r\n      repositories:\r\n        enabled: true\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8603\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n#eureka相关配置\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    registerWithEureka: true\r\n#    fetchRegistry: true\r\n#    serviceUrl:\r\n#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848\r\n\r\n# 或者：\r\nfeign.hystrix.enabled: false # 索性禁用feign的hystrix支持\r\n# 设置feign调用超时时间\r\nribbon:\r\n  ReadTimeout: 20000\r\n  ConnectTimeout: 20000\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n\r\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\r\njustAuth:\r\n  clientId:\r\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e # 改成自己的\r\n    github: c99bfe31f8774ec8e242 # 改成自己的\r\n    qq: XXXXXXXXXXXXXXX  # 改成自己的\r\n  clientSecret:\r\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47 # 改成自己的\r\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618 # 改成自己的\r\n    qq: XXXXXXXXXXXXXXXXXX # 改成自己的', '233689198acc543aa89350d3f23058a2', '2020-06-20 09:56:24', '2020-06-20 09:56:24', NULL, '0:0:0:0:0:0:0:1', '', 'f431bd53-e6c6-451c-803c-b32712f38562', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (38, 'mogu-admin-dev.yaml', 'dev', '#app\nserver:\n  port: 8601\n\ndata:\n  # 门户页面  如果没有域名，使用 http://localhost:9527/#/\n  webSite:\n    url: http://demoweb.moguit.cn/#/\n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/wx_picture/raw/master/picture/2.png\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\n#阿里大于\ntemplateCode: SMS_XXXXXX #短信模板编号\nsignName: 蘑菇博客\n\n# 邮箱验证\nmoguBlog:\n  email: mogublog@163.com\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#spring\nspring:\n  jackson:\n    serialization:\n      INDENT_OUTPUT: true\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n  jmx:\n    default-domain: mogu-admin\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-admin\n  security:\n    user:\n      name: user\n      password: password123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://192.168.6.189:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: 129.211.7.213 #redis的主机ip\n    port: 6379\n\n  rabbitmq:\n    host: 129.211.7.213 #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: admin\n    password: mogu2018\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8601\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 129.211.7.213:8848\n\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n##jwt配置\ntokenHead: bearer_\ntokenHeader: Authorization\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  clientId: 098f6bcd4621d373cade4e832627b4f6\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n  name: mogublog\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '235c4e5a58a43c2cff6b4beeea9185b2', '2020-06-20 10:20:17', '2021-06-26 06:16:24', 'nacos', '222.191.229.234', '', 'dev', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (39, 'mogu-gateway-dev.yaml', 'dev', 'server:\n  port: 8607\n\nspring:\n  application:\n    name: mogu-gateway\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 129.211.7.213:8848\n      config:\n        server-addr: 129.211.7.213:8848\n        file-extension: yaml\n        group: dev\n', '2a1eba4bdc3217d74dbde0c7ac123f3a', '2020-06-20 10:20:17', '2021-06-26 05:04:58', 'nacos', '222.191.229.234', '', 'dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (40, 'mogu-monitor-dev.yaml', 'dev', 'server:\n  port: 8606\n\nspring:\n  application:\n    name: mogu-monitor\n  security:\n    user:\n      name: user\n      password: password123\n  boot:\n    admin:\n      ui:\n        title: 蘑菇博客监控中心\n        brand: 蘑菇博客监控中心\n      username: user\n      password: password123\n      notify:\n        mail:\n          enabled: false\n          # 服务上下线会自动发送邮件\n          #from: mogublog@163.com\n          #to: moxi0624@163.com\n\n  #mail\n  mail:\n    username: mogublog@163.com\n    password: a1313375 #授权码开启SMTP服务里设置\n    host: smtp.163.com\n\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n            required: true\n          ssl:\n            enable: true\n\n#eureka相关配置\n#eureka:\n#  client:\n#    healthcheck:\n#      enabled: true\n#    serviceUrl:\n#      defaultZone: http://user:password123@localhost:8761/eureka\n#  instance:\n#    prefer-ip-address: true\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\n#    health-check-url-path: /actuator/health\n#    metadata-map:\n#      user.name: admin\n#      user.password: 123456\n#    lease-renewal-interval-in-seconds: 5\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 129.211.7.213:8848', 'aaaf15d15509e3ab0da10a7c8e2feb02', '2020-06-20 10:20:17', '2021-06-26 04:40:51', 'nacos', '222.191.229.234', '', 'dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (41, 'mogu-picture-dev.yaml', 'dev', '#app\nserver:\n  port: 8602\n  max-http-header-size: 102400\n\nfile:\n  upload:\n    path: E:/mogu_blog/data/\n\n#spring\nspring:\n  servlet:\n    multipart:\n      enabled: true\n      max-file-size: 100MB # 修改单次文件上传文件大小不能超过100MB\n      max-request-size: 500MB # 设置单次文件请求总大小不能超过500MB\n\n  jmx:\n    default-domain: mogu-picture\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-picture\n  security:\n    user:\n      name: user\n      password: password123\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8602\n\n  #redis\n  redis:\n    host: 129.211.7.213 #redis的主机ip\n    port: 6379\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://192.168.6.189:3306/mogu_picture?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n  mvc:\n    static-path-pattern: /upload/**\n  resources:\n    static-locations: classpath:/static/upload\n\n# eureka:\n#   client:\n#     healthcheck:\n#       enabled: true\n#     registerWithEureka: true\n#     fetchRegistry: true\n#     serviceUrl:\n#       defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\n#   instance:\n#     prefer-ip-address: true\n#     instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\n#     lease-renewal-interval-in-seconds: 5\n#     appname: mogu-picture\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false', 'd654957d36e4c95c2f90f8cf45247609', '2020-06-20 10:20:17', '2021-06-26 05:23:01', 'nacos', '222.191.229.234', '', 'dev', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (42, 'mogu-search-dev.yaml', 'dev', 'server:\r\n  port: 8605\r\nspring:\r\n  application:\r\n    name: mogu-search\r\n  jmx:\r\n    default-domain: mogu-search\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  data:\r\n    # elasticsearch:\r\n    #   cluster-name: elasticsearch\r\n    #   cluster-nodes: localhost:9300\r\n    solr:\r\n      host: http://localhost:8080/solr\r\n      core: collection1\r\n      repositories:\r\n        enabled: true\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n      instance:\r\n        service-base-url: http://localhost:8605\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n#eureka:\r\n#  client:\r\n#    healthcheck:\r\n#      enabled: true\r\n#    registerWithEureka: true\r\n#    fetchRegistry: true\r\n#    serviceUrl:\r\n#      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#  instance:\r\n#    prefer-ip-address: true\r\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#    lease-renewal-interval-in-seconds: 5\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848\r\n\r\n# 激活Sentinel对Feign的支持\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always', '385c6128a8c545119c9adcb8934882df', '2020-06-20 10:20:17', '2020-10-06 11:10:44', NULL, '0:0:0:0:0:0:0:1', '', 'dev', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (43, 'mogu-sms-dev.yaml', 'dev', '#app\r\nserver:\r\n  port: 8604\r\n\r\n#阿里大于\r\naccessKeyId: XXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\naccessKeySecret: XXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu-sms\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-sms\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  #RabbitMq\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672\r\n    username: guest\r\n    password: guest\r\n\r\n  #mail\r\n  mail:\r\n    username: mogublog@163.com \r\n    password: a1313375 #授权码开启SMTP服务里设置\r\n    host: smtp.163.com\r\n    default-encoding: UTF-8\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          ssl:\r\n            enable: true\r\n          socketFactory:\r\n            port: 465\r\n            class: javax.net.ssl.SSLSocketFactory\r\n          auth: true\r\n          starttls:\r\n            enable: false\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8604\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848\r\n\r\n# 激活Sentinel对Feign的支持\r\nfeign:\r\n  sentinel:\r\n    enabled: true\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always', '70a72d69cd1bd59adcc0b60c18509b30', '2020-06-20 10:20:17', '2020-10-06 09:47:55', NULL, '0:0:0:0:0:0:0:1', '', 'dev', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (58, 'mogu-spider-dev.yaml', 'dev', '#app\r\nserver:\r\n  port: 8608\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu-spider\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-spider\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8608\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\neureka:\r\n  client:\r\n    healthcheck:\r\n      enabled: true\r\n    registerWithEureka: true\r\n    fetchRegistry: true\r\n    serviceUrl:\r\n      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n  instance:\r\n    prefer-ip-address: true\r\n    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n    lease-renewal-interval-in-seconds: 5\r\n    appname: mogu-spider\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.spider.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false', 'ccad980b396c0c89946de126cb83303e', '2020-06-20 10:45:53', '2020-09-15 16:01:57', NULL, '0:0:0:0:0:0:0:1', '', 'dev', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (59, 'mogu-web-dev.yaml', 'dev', '#app\nserver:\n  port: 8603\n\ndata:\n  # 门户页面  如果有域名：http://www.moguit.cn/#/   如果没有域名：http://localhost:9527/#/\n  webSite:\n    url: http://localhost:9527/#/\n  \n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/mogu_blog_v2/raw/Nacos/doc/icon/favicon2.ico\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\nfile:\n  upload:\n    path: D:/mogu_blog/data/\n\n# 蘑菇博客登录默认密码\nDEFAULE_PWD: mogu2018\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#请求限制参数\nrequest-limit:\n  start: false # 是否开启请求限制，默认关闭\n  amount: 100 # 100次\n  time: 60000 # 1分钟\n\n#博客相关配置\nBLOG:\n  HOT_COUNT: 5 #热门博客数量\n  HOT_TAG_COUNT: 20 #热门标签数量\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\n  NEW_COUNT: 15 #最新博客数据\n  FIRST_COUNT: 5 #一级推荐\n  SECOND_COUNT: 2 #二级推荐\n  THIRD_COUNT: 3 #三级推荐\n  FOURTH_COUNT: 5 #四级推荐\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\n\n  # 原创模板\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\n  # 转载模板\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 %S ，版权归 %S 所有，如果侵权之处，请联系博主进行删除，谢谢~\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu-web\n  # freemarker相关配置\n  freemarker:\n    charset: utf-8\n    suffix: .ftl\n    content-type: text/html\n    template-loader-path: classpath:/templates\n  # jackson配置响应时间格式、时区\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n\n  application:\n    name: mogu-web\n  security:\n    user:\n      name: user\n      password: password123\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://192.168.6.189:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 5\n    minIdle: 5\n    maxActive: 50\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #Solr配置信息\n  data:\n    solr:\n      host: http://localhost:8080/solr\n      core: collection1\n      repositories:\n        enabled: true\n\n  #redis\n  redis:\n    host: 129.211.7.213 #redis的主机ip\n    port: 6379\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  rabbitmq:\n    host: 129.211.7.213 #rabbitmq的主机ip\n    port: 5672\n    username: admin\n    password: mogu2018\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8603\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n\n# 设置feign调用超时时间\nribbon:\n  ReadTimeout: 20000\n  ConnectTimeout: 20000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\njustAuth:\n  clientId:\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e # 改成自己的\n    github: c99bfe31f8774ec8e242 # 改成自己的\n    qq: 101880644  # 改成自己的\n  clientSecret:\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47 # 改成自己的\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618 # 改成自己的\n    qq: cbc294d36dabeac4bf6c31ced8bf930f # 改成自己的\n\n# uniapp相关配置，如果需要发布移动端博客小程序时使用\nuniapp:\n  qq:\n    appid: 1110769790  # 改成自己的\n    secret: zWZBLzBcekMUTP60  # 改成自己的\n    grant_type: authorization_code', 'f6814f8f1426447a6f5546e3c1847b1c', '2020-06-20 10:47:34', '2021-06-26 05:39:57', 'nacos', '222.191.229.234', '', 'dev', '蘑菇博客dev环境配置', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (61, 'mogu-web-flow-rules', 'DEFAULT_GROUP', '[\r\n    {\r\n    \"clusterMode\": false,\r\n    \"controlBehavior\": 0,\r\n    \"count\": 100,\r\n    \"grade\": 1,\r\n    \"limitApp\": \"default\",\r\n    \"resource\": \"/index/getBlogByLevel\",\r\n    \"strategy\": 0\r\n    }\r\n]', '3e8d52b57427ce0cfa8e7e4319a81281', '2020-10-02 10:23:06', '2020-10-02 11:31:24', NULL, '0:0:0:0:0:0:0:1', '', '', 'mogu-web流控规则', 'null', 'null', 'json', 'null');
INSERT INTO `config_info` VALUES (62, 'mogu-web-degrade-rules', 'DEFAULT_GROUP', '[\r\n    {\r\n    \"count\": 1,\r\n    \"grade\": 2,\r\n    \"resource\": \"/index/getBlogByLevel\",\r\n    \"timeWindow\": 5\r\n    }\r\n]', '6409473915d774ed783e427db652f1cc', '2020-10-02 10:24:12', '2020-10-02 10:54:48', NULL, '0:0:0:0:0:0:0:1', '', '', 'mogu-web降级规则', 'null', 'null', 'json', 'null');
INSERT INTO `config_info` VALUES (63, 'mogu-picture-flow-rules', 'DEFAULT_GROUP', '[\r\n    {\r\n    \"clusterMode\": false,\r\n    \"controlBehavior\": 0,\r\n    \"count\": 100,\r\n    \"grade\": 1,\r\n    \"limitApp\": \"default\",\r\n    \"resource\": \"/file/getPicture\",\r\n    \"strategy\": 0\r\n    }\r\n]', '3eb13b754d1a8337df6bf4d5c4c77bf2', '2020-10-03 20:31:59', '2020-10-05 10:09:06', NULL, '0:0:0:0:0:0:0:1', '', '', 'mogu-picture流控配置', 'null', 'null', 'json', 'null');
INSERT INTO `config_info` VALUES (64, 'mogu-picture-degrade-rules', 'DEFAULT_GROUP', '[\r\n    {\r\n    \"count\": 1,\r\n    \"grade\": 2,\r\n    \"resource\": \"/index/getBlogByLevel\",\r\n    \"timeWindow\": 5\r\n    }\r\n]', '6409473915d774ed783e427db652f1cc', '2020-10-03 20:32:42', '2020-10-03 20:32:42', NULL, '0:0:0:0:0:0:0:1', '', '', 'mogu-web降级配置', NULL, NULL, 'json', NULL);
INSERT INTO `config_info` VALUES (69, 'mogu-search-flow-rules', 'DEFAULT_GROUP', '[\r\n    {\r\n    \"clusterMode\": false,\r\n    \"controlBehavior\": 0,\r\n    \"count\": 100,\r\n    \"grade\": 1,\r\n    \"limitApp\": \"default\",\r\n    \"resource\": \"/search/addSolrIndexByUid\",\r\n    \"strategy\": 0\r\n    }\r\n]', '13c8839cd70023e42d6b6b1c5cb9e78c', '2020-10-06 16:49:18', '2020-10-06 18:19:39', NULL, '0:0:0:0:0:0:0:1', '', '', '搜索服务流控规则', 'null', 'null', 'json', 'null');
INSERT INTO `config_info` VALUES (70, 'mogu-search-degrade-rules', 'DEFAULT_GROUP', '[\r\n    \r\n]', '504352a1f39e3227c9852aa329c558e3', '2020-10-06 16:49:43', '2020-10-06 16:49:43', NULL, '0:0:0:0:0:0:0:1', '', '', '搜索服务降级规则', NULL, NULL, 'json', NULL);
INSERT INTO `config_info` VALUES (72, 'mogu-commons.yml', 'dev', '#spring\nspring:\n  jackson:\n    serialization:\n      INDENT_OUTPUT: true\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n  security:\n    user:\n      name: user\n      password: password123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n  #redis\n  redis:\n    host: 129.211.7.213 #redis的主机ip\n    port: 6379\n\n  rabbitmq:\n    host: 129.211.7.213 #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: guest\n    password: guest\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8601\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 129.211.7.213:8848', '3e414943ae9cac73a82fe1fdac186743', '2020-11-06 16:36:23', '2021-06-26 04:49:58', 'nacos', '222.191.229.234', '', 'dev', '蘑菇博客通用配置', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (73, 'mogu-admin-prod.yaml', 'prod', '#app\nserver:\n  port: 8601\n\n#阿里大于\ntemplateCode: SMS_XXXXXX #短信模板编号\nsignName: 蘑菇博客\n\n#项目名称\nPROJECT_NAME: 蘑菇博客\n\ndata:\n  # 门户页面  如果没有域名，使用 http://120.78.126.96:9527/#/\n  webSite:\n    url: http://demoweb.moguit.cn/#/\n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://120.78.126.96:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/mogu_blog_v2/raw/Nacos/doc/icon/favicon2.ico\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\nfile:\n  upload:\n    path: /home/mogu_blog/mogu_data/\n\n# 邮箱验证\nmoguBlog:\n  email: mogublog@163.com\n\n# 蘑菇博客后台登录默认密码\nDEFAULE_PWD: mogu2018\n\n#博客相关配置\nBLOG:\n  HOT_COUNT: 5 #热门博客数量\n  NEW_COUNT: 15 #最新博客数据\n  FIRST_COUNT: 5 #一级推荐\n  SECOND_COUNT: 2 #二级推荐\n  THIRD_COUNT: 3 #三级推荐\n  FOURTH_COUNT: 5 #四级推荐\n\n#spring\nspring:\n  jackson:\n    serialization:\n      INDENT_OUTPUT: true\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n  jmx:\n    default-domain: mogu_admin\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-admin\n  security:\n    user:\n      name: user\n      password: password123\n\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: mogu2018\n    url: jdbc:mysql://mysql:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: mogu2018\n\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672\n    username: admin\n    password: mogu2018\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://laputa-monitor:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://mogu_admin:8601\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n    \n# 禁用feign的hystrix支持\nfeign.hystrix.enabled: false\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n##jwt配置\ntokenHead: bearer_\ntokenHeader: Authorization\nisRememberMeExpiresSecond: 259200 #记住账号为3天有效\naudience:\n  clientId: 098f6bcd4621d373cade4e832627b4f6\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n  name: mogublog\n  expiresSecond: 3600  #1个小时 3600\n  refreshSecond: 300 # 刷新token的时间 5分钟', '018cfc47ea5cc15c6f2e6510b40bac35', '2020-11-15 22:47:55', '2021-05-13 09:07:01', 'nacos', '0:0:0:0:0:0:0:1', '', 'prod', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (74, 'mogu-gateway-prod.yaml', 'prod', 'server:\n  port: 8607\n', 'cfba5ed8647a0a24f76f188031cf6716', '2020-11-15 22:47:55', '2020-12-11 07:25:10', NULL, '116.1.3.233', '', 'prod', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (75, 'mogu-monitor-prod.yaml', 'prod', 'server:\n  port: 8606\n\nspring:\n  application:\n    name: mogu-monitor\n  security:\n    user:\n      name: user\n      password: password123\n  boot:\n    admin:\n      ui:\n        title: 蘑菇博客监控中心\n        brand: 蘑菇博客监控中心\n      notify:\n        mail:\n          enabled: false\n          # 服务上下线会自动发送邮件\n          from: mogublog@163.com\n          to: moxi0624@163.com\n\n  #mail\n  mail:\n    username: mogublog@163.com  # 改成自己的\n    password: a1313375 #授权码开启SMTP服务里设置，改成自己的\n    host: smtp.163.com\n\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n            required: true\n          ssl:\n            enable: true', '7180ae805fa665251b3bdb2c23317087', '2020-11-15 22:47:55', '2020-12-05 12:26:28', NULL, '192.168.177.1', '', 'prod', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (76, 'mogu-picture-prod.yaml', 'prod', '#app\nserver:\n  port: 8602\n\nfile:\n  upload:\n    path: /home/mogu_blog/mogu_data/\n\n#spring\nspring:\n  servlet:\n    multipart:\n      enabled: true\n      max-file-size: 100MB # 修改单次文件上传文件大小不能超过10MB\n      max-request-size: 500MB # 设置单次文件请求总大小不能超过50MB\n\n  jmx:\n    default-domain: mogu_picture\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-picture\n  security:\n    user:\n      name: user\n      password: password123\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://laputa-monitor:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://mogu_picture:8602\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: mogu2018\n          \n          \n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: mogu2018\n    url: jdbc:mysql://mysql:3306/mogu_picture?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    initialSize: 5\n    minIdle: 5\n    maxActive: 20\n    maxWait: 60000\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false', '331bb5b65b7d80fff17343801db6e6a1', '2020-11-15 22:47:55', '2020-12-02 08:03:31', NULL, '192.168.177.1', '', 'prod', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (77, 'mogu-search-prod.yaml', 'prod', 'server:\n  port: 8605\nspring:\n  application:\n    name: mogu-search\n  jmx:\n    default-domain: mogu-search\n  security:\n    user:\n      name: user\n      password: password123\n  data:\n    elasticsearch:\n      cluster-name: elasticsearch\n      cluster-nodes: http://192.168.177.150:9300\n    # solr:\n    #   host: http://solr:8080/solr\n    #   core: collection1\n    #   repositories:\n    #     enabled: true\n\n  #  jackson:\n  #    default-property-inclusion: non_null\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://laputa-monitor:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://laputa-pay-platform:8605\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always', '4a4ca59769c1668e90593195657941da', '2020-11-15 22:47:55', '2020-12-10 03:40:04', NULL, '192.168.177.1', '', 'prod', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (78, 'mogu-sms-prod.yaml', 'prod', '#app\nserver:\n  port: 8604\n\n#阿里大于\naccessKeyId: XXXXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\naccessKeySecret: XXXXXXXXXXXXXXXXXXXXXXXXXX #修改成自己的\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu_sms\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-sms\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: mogu2018\n\n  #RabbitMq\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672\n    username: admin\n    password: mogu2018\n\n  #mail\n  mail:\n    username: mogublog@163.com # 修改成自己的\n    password: a1313375 #授权码开启SMTP服务里设置，这里修改成自己的\n    host: smtp.163.com\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          ssl:\n            enable: true\n          socketFactory:\n            port: 465\n            class: javax.net.ssl.SSLSocketFactory\n          auth: true\n          starttls:\n            enable: false\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://laputa-monitor:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://mogu_sms:8604\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always', '093bbd436fc83945446dc3636c61d671', '2020-11-15 22:47:55', '2020-12-02 08:02:01', NULL, '192.168.177.1', '', 'prod', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (79, 'mogu-spider-prod.yaml', 'prod', '#app\r\nserver:\r\n  port: 8608\r\n\r\n#spring\r\nspring:\r\n  jmx:\r\n    default-domain: mogu_spider\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-spider\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8608\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    password: mogu2018\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: mogu2018\r\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.spider.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false', 'cb6fd0b8ad533cbd0c7f7675ed98ef70', '2020-11-15 22:47:55', '2020-11-15 22:47:55', NULL, '0:0:0:0:0:0:0:1', '', 'prod', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (80, 'mogu-web-prod.yaml', 'prod', '#app\nserver:\n  port: 8603\n\ndata:\n  # 门户页面  如果没有域名，使用 http://120.78.126.96:9527/#/\n  webSite:\n    url: http://demoweb.moguit.cn/#/\n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://120.78.126.96:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/mogu_blog_v2/raw/Nacos/doc/icon/favicon2.ico\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n    \nfile:\n  upload:\n    path: /home/mogu_blog/mogu_data/\n\n# 蘑菇博客登录默认密码\nDEFAULE_PWD: mogu2018\n\n#请求限制参数\nrequest-limit:\n  start: false # 是否开启请求限制，默认关闭\n  amount: 100 # 100次\n  time: 60000 # 1分钟\n\n#博客相关配置\nBLOG:\n  HOT_COUNT: 5 #热门博客数量\n  HOT_TAG_COUNT: 20 #热门标签数量\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\n  NEW_COUNT: 15 #最新博客数据\n  FIRST_COUNT: 5 #一级推荐\n  SECOND_COUNT: 2 #二级推荐\n  THIRD_COUNT: 3 #三级推荐\n  FOURTH_COUNT: 5 #四级推荐\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\n\n  # 原创模板\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\n  # 转载模板\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 %S ，版权归 %S 所有，如果侵权之处，请联系博主进行删除，谢谢~\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu_web\n  # freemarker相关配置\n  freemarker:\n    charset: utf-8\n    suffix: .ftl\n    content-type: text/html\n    template-loader-path: classpath:/templates\n  # jackson配置响应时间格式、时区\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n\n  application:\n    name: mogu-web\n  security:\n    user:\n      name: user\n      password: password123\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: mogu2018\n    url: jdbc:mysql://mysql:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 5\n    minIdle: 5\n    maxActive: 50\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #Solr配置信息\n  data:\n    solr:\n      host: http://solr:8080/solr\n      core: collection1\n      repositories:\n        enabled: true\n\n  #redis\n  redis:\n    host: redis #redis的主机ip\n    port: 6379\n    password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  rabbitmq:\n    host: rabbitmq #rabbitmq的主机ip\n    port: 5672\n    username: admin\n    password: mogu2018\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://laputa-monitor:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://mogu_web:8603\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://zipkin:9411  # 指定了Zipkin服务器的地址\n\n# 或者：\nfeign.hystrix.enabled: false # 索性禁用feign的hystrix支持\n# 设置feign调用超时时间\nribbon:\n  ReadTimeout: 20000\n  ConnectTimeout: 20000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\njustAuth:\n  clientId:\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e\n    github: c99bfe31f8774ec8e242\n    qq: 101880644  # 改成自己的\n  clientSecret:\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618\n    qq: cbc294d36dabeac4bf6c31ced8bf930f # 改成自己的\n\n# uniapp相关配置\nuniapp:\n  qq:\n    appid: 1110769790  # 改成自己的\n    secret: zWZBLzBcekMUTP60  # 改成自己的\n    grant_type: authorization_code', 'ce569888b7e28a7baf9ee9137a09d6e0', '2020-11-15 22:47:55', '2020-12-11 13:13:00', NULL, '116.1.3.233', '', 'prod', 'null', 'null', 'null', 'yaml', 'null');
INSERT INTO `config_info` VALUES (95, 'common.yml', 'DEFAULT_GROUP', 'server:\r\n  undertow: # jetty  undertow\r\n    io-threads: 8 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 120  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\nspring:\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 512MB      # Max file size，默认1M\r\n      max-request-size: 512MB   # Max request size，默认10M\r\n\r\ndozer:\r\n  mappingFiles:\r\n    - classpath:dozer/global.dozer.xml\r\n    - classpath:dozer/biz.dozer.xml\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n\r\nfeign:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  hystrix:\r\n    enabled: true   # feign 熔断机制是否开启\r\n    #支持压缩的mime types\r\n  compression:  # 请求压缩\r\n    request:\r\n      enabled: true\r\n      mime-types: text/xml,application/xml,application/json\r\n      min-request-size: 2048\r\n    response:  # 响应压缩\r\n      enabled: true\r\n\r\nribbon:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  eureka:\r\n    enabled: true\r\n  ReadTimeout: 30000     #\r\n  ConnectTimeout: 30000  # [ribbon超时时间]大于[熔断超时],那么会先走熔断，相当于你配的ribbon超时就不生效了  ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n  MaxAutoRetries: 0             # 最大自动重试\r\n  MaxAutoRetriesNextServer: 1   # 最大自动像下一个服务重试\r\n  OkToRetryOnAllOperations: false  #无论是请求超时或者socket read timeout都进行重试，\r\n\r\nhystrix:\r\n  threadpool:\r\n    default:\r\n      coreSize: 1000 # #并发执行的最大线程数，默认10\r\n      maxQueueSize: 1000 # #BlockingQueue的最大队列数\r\n      queueSizeRejectionThreshold: 500 # #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 120000  # 熔断超时 ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n\r\nid-generator:\r\n  machine-code: 1  # id生成器机器掩码', 'f33766c1ef74680c95b4bf4b107d0d52', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', '', '19e1e427-3a53-4c4e-8425-9be62a4db557', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (96, 'mysql.yml', 'DEFAULT_GROUP', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制\n# 到具体环境的配置文件中进行修改即可\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\nlaputa:\n  mysql:\n    ip: 192.168.6.189\n    port: 3306\n    driverClassName: com.mysql.cj.jdbc.Driver\n    database: pd_auth\n    username: root\n    password: root\n  database:\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\n\n# mysql 通用配置\nspring:\n  datasource:\n    druid:\n      username: ${laputa.mysql.username}\n      password: ${laputa.mysql.password}\n      driver-class-name: ${laputa.mysql.driverClassName}\n      url: jdbc:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\n      db-type: mysql\n      initialSize: 10\n      minIdle: 10\n      maxActive: 500\n      max-wait: 60000\n      pool-prepared-statements: true\n      max-pool-prepared-statement-per-connection-size: 20\n      validation-query: SELECT \'x\'\n      test-on-borrow: false\n      test-on-return: false\n      test-while-idle: true\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\n      filters: stat,wall\n      filter:\n        wall:\n          enabled: true\n          config:\n            commentAllow: true\n            multiStatementAllow: true\n            noneBaseStatementAllow: true\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\n        enabled: true\n        url-pattern: /*\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\n        session-stat-max-count: 1000\n        profile-enable: true\n        session-stat-enable: false\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\n        enabled: true\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\n        reset-enable: true    #允许清空统计数据\n        login-username: laputa\n        login-password: laputa\n\nmybatis-plus:\n  mapper-locations:\n    - classpath*:mapper_**/**/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.itheima.laputa.*.entity;com.itheima.laputa.database.mybatis.typehandler\n  global-config:\n    db-config:\n      id-type: INPUT\n      insert-strategy: NOT_NULL\n      update-strategy: NOT_NULL\n      select-strategy: NOT_EMPTY\n  configuration:\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，\n    #自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n    #配置JdbcTypeForNull, oracle数据库必须配置\n    jdbc-type-for-null: \'null\'\n', 'b45e11d3eaf6d7bd17f324b28bf01b28', '2021-06-29 06:39:17', '2021-06-29 07:02:00', 'nacos', '222.191.229.234', '', '19e1e427-3a53-4c4e-8425-9be62a4db557', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (97, 'pd-auth-server-dev.yml', 'DEFAULT_GROUP', '# p6spy是一个开源项目，通常使用它来跟踪数据库操作，查看程序运行过程中执行的sql语句\r\n# 开发环境需要使用p6spy进行sql语句输出\r\n# 但p6spy会有性能损耗，不适合在生产线使用，故其他环境无需配置\r\nspring:\r\n  datasource:\r\n    driver-class-name: com.p6spy.engine.spy.P6SpyDriver\r\n    url: jdbc:p6spy:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n    db-type: mysql\r\n', '9065a0332fbdba347cdf530ff2afe99f', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', '', '19e1e427-3a53-4c4e-8425-9be62a4db557', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (98, 'pd-auth-server.yml', 'DEFAULT_GROUP', '# 在这里配置 权限服务 所有环境都能使用的配置\r\nlaputa:\r\n  mysql:\r\n    database: pd_auth\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.itheima.laputa.authority.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.itheima.laputa.authority.controller.common\r\n      core:\r\n        title: 组织岗位模块\r\n        base-package: com.itheima.laputa.authority.controller.core\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    expire: 43200               # 外部token有效期为12小时\r\n    pri-key: client/pri.key    # 加密\r\n    pub-key: client/pub.key    # 解密\r\n\r\nserver:\r\n  port: 8764\r\n', '40188236b25255fd3aec6d911dc32194', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', '', '19e1e427-3a53-4c4e-8425-9be62a4db557', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (99, 'pd-gateway.yml', 'DEFAULT_GROUP', 'laputa:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  mvc:\r\n    servlet:\r\n      path: /gate\r\n\r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path\r\n\r\nzuul:\r\n  #  debug:\r\n  #    request: true\r\n  #  include-debug-header: true\r\n  retryable: false\r\n  servlet-path: /         # 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀\r\n  ignored-services: \"*\"   # 忽略eureka上的所有服务\r\n  sensitive-headers:  # 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置\r\n  #  prefix: /api #为zuul设置一个公共的前缀\r\n  #  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除\r\n  routes:  # 路由配置方式\r\n    authority:  # 其中 authority 是路由名称，可以随便定义，但是path和service-id需要一一对应\r\n      path: /authority/**\r\n      serviceId: pd-auth-server\r\n    file:\r\n      path: /file/**\r\n      serviceId: pd-file-server\r\n\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    pub-key: client/pub.key    # 解密\r\n', 'fedfb2b57249ee0ecd380a203cb17ddb', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', '', '19e1e427-3a53-4c4e-8425-9be62a4db557', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (100, 'redis.yml', 'DEFAULT_GROUP', '# redis 通用配置， 不同的环境，需要配置不同的链接信息，\r\n# 只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\r\nlaputa:\r\n  redis:\r\n    ip: 127.0.0.1\r\n    port: 6379\r\n    password:\r\n    database: 0\r\n\r\nspring:\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${laputa.redis.ip}\r\n    password: ${laputa.redis.password}\r\n    port: ${laputa.redis.port}\r\n    database: ${laputa.redis.database}\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  l2-cache-open: true\r\n  # l2-cache-open: false     # 关闭二级缓存\r\n  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  #  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${laputa.redis.ip}:${laputa.redis.port}\r\n  password: ${laputa.redis.password}\r\n  database: ${laputa.redis.database}\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000', '38c69f8b6607c385c19f6a0b299b2860', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', '', '19e1e427-3a53-4c4e-8425-9be62a4db557', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (108, 'common.yml', 'DEFAULT_GROUP', 'server:\r\n  undertow: # jetty  undertow\r\n    io-threads: 8 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 120  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\nspring:\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 512MB      # Max file size，默认1M\r\n      max-request-size: 512MB   # Max request size，默认10M\r\n\r\ndozer:\r\n  mappingFiles:\r\n    - classpath:dozer/global.dozer.xml\r\n    - classpath:dozer/biz.dozer.xml\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n\r\nfeign:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  hystrix:\r\n    enabled: true   # feign 熔断机制是否开启\r\n    #支持压缩的mime types\r\n  compression:  # 请求压缩\r\n    request:\r\n      enabled: true\r\n      mime-types: text/xml,application/xml,application/json\r\n      min-request-size: 2048\r\n    response:  # 响应压缩\r\n      enabled: true\r\n\r\nribbon:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  eureka:\r\n    enabled: true\r\n  ReadTimeout: 30000     #\r\n  ConnectTimeout: 30000  # [ribbon超时时间]大于[熔断超时],那么会先走熔断，相当于你配的ribbon超时就不生效了  ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n  MaxAutoRetries: 0             # 最大自动重试\r\n  MaxAutoRetriesNextServer: 1   # 最大自动像下一个服务重试\r\n  OkToRetryOnAllOperations: false  #无论是请求超时或者socket read timeout都进行重试，\r\n\r\nhystrix:\r\n  threadpool:\r\n    default:\r\n      coreSize: 1000 # #并发执行的最大线程数，默认10\r\n      maxQueueSize: 1000 # #BlockingQueue的最大队列数\r\n      queueSizeRejectionThreshold: 500 # #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 120000  # 熔断超时 ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n\r\nid-generator:\r\n  machine-code: 1  # id生成器机器掩码', 'f33766c1ef74680c95b4bf4b107d0d52', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', '', '3abb628c-2290-41c7-b3ff-65c1a961277b', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (109, 'mysql.yml', 'DEFAULT_GROUP', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制\n# 到具体环境的配置文件中进行修改即可\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\nlaputa:\n  mysql:\n    ip: 192.168.6.189\n    port: 3306\n    driverClassName: com.mysql.cj.jdbc.Driver\n    database: pd_auth\n    username: root\n    password: root\n  database:\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\n\n# mysql 通用配置\nspring:\n  datasource:\n    druid:\n      username: ${laputa.mysql.username}\n      password: ${laputa.mysql.password}\n      driver-class-name: ${laputa.mysql.driverClassName}\n      url: jdbc:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\n      db-type: mysql\n      initialSize: 10\n      minIdle: 10\n      maxActive: 500\n      max-wait: 60000\n      pool-prepared-statements: true\n      max-pool-prepared-statement-per-connection-size: 20\n      validation-query: SELECT \'x\'\n      test-on-borrow: false\n      test-on-return: false\n      test-while-idle: true\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\n      filters: stat,wall\n      filter:\n        wall:\n          enabled: true\n          config:\n            commentAllow: true\n            multiStatementAllow: true\n            noneBaseStatementAllow: true\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\n        enabled: true\n        url-pattern: /*\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\n        session-stat-max-count: 1000\n        profile-enable: true\n        session-stat-enable: false\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\n        enabled: true\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\n        reset-enable: true    #允许清空统计数据\n        login-username: laputa\n        login-password: laputa\n\nmybatis-plus:\n  mapper-locations:\n    - classpath*:mapper_**/**/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.itheima.laputa.*.entity;com.itheima.laputa.database.mybatis.typehandler\n  global-config:\n    db-config:\n      id-type: INPUT\n      insert-strategy: NOT_NULL\n      update-strategy: NOT_NULL\n      select-strategy: NOT_EMPTY\n  configuration:\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，\n    #自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n    #配置JdbcTypeForNull, oracle数据库必须配置\n    jdbc-type-for-null: \'null\'\n', 'b45e11d3eaf6d7bd17f324b28bf01b28', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', '', '3abb628c-2290-41c7-b3ff-65c1a961277b', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (110, 'pd-auth-server-dev.yml', 'DEFAULT_GROUP', '# p6spy是一个开源项目，通常使用它来跟踪数据库操作，查看程序运行过程中执行的sql语句\r\n# 开发环境需要使用p6spy进行sql语句输出\r\n# 但p6spy会有性能损耗，不适合在生产线使用，故其他环境无需配置\r\nspring:\r\n  datasource:\r\n    driver-class-name: com.p6spy.engine.spy.P6SpyDriver\r\n    url: jdbc:p6spy:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n    db-type: mysql\r\n', '9065a0332fbdba347cdf530ff2afe99f', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', '', '3abb628c-2290-41c7-b3ff-65c1a961277b', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (111, 'pd-auth-server.yml', 'DEFAULT_GROUP', '# 在这里配置 权限服务 所有环境都能使用的配置\r\nlaputa:\r\n  mysql:\r\n    database: pd_auth\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.itheima.laputa.authority.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.itheima.laputa.authority.controller.common\r\n      core:\r\n        title: 组织岗位模块\r\n        base-package: com.itheima.laputa.authority.controller.core\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    expire: 43200               # 外部token有效期为12小时\r\n    pri-key: client/pri.key    # 加密\r\n    pub-key: client/pub.key    # 解密\r\n\r\nserver:\r\n  port: 8764\r\n', '40188236b25255fd3aec6d911dc32194', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', '', '3abb628c-2290-41c7-b3ff-65c1a961277b', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (112, 'pd-gateway.yml', 'DEFAULT_GROUP', 'laputa:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  mvc:\r\n    servlet:\r\n      path: /gate\r\n\r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path\r\n\r\nzuul:\r\n  #  debug:\r\n  #    request: true\r\n  #  include-debug-header: true\r\n  retryable: false\r\n  servlet-path: /         # 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀\r\n  ignored-services: \"*\"   # 忽略eureka上的所有服务\r\n  sensitive-headers:  # 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置\r\n  #  prefix: /api #为zuul设置一个公共的前缀\r\n  #  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除\r\n  routes:  # 路由配置方式\r\n    authority:  # 其中 authority 是路由名称，可以随便定义，但是path和service-id需要一一对应\r\n      path: /authority/**\r\n      serviceId: pd-auth-server\r\n    file:\r\n      path: /file/**\r\n      serviceId: pd-file-server\r\n\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    pub-key: client/pub.key    # 解密\r\n', 'fedfb2b57249ee0ecd380a203cb17ddb', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', '', '3abb628c-2290-41c7-b3ff-65c1a961277b', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (113, 'redis.yml', 'DEFAULT_GROUP', '# redis 通用配置， 不同的环境，需要配置不同的链接信息，\r\n# 只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\r\nlaputa:\r\n  redis:\r\n    ip: 127.0.0.1\r\n    port: 6379\r\n    password:\r\n    database: 0\r\n\r\nspring:\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${laputa.redis.ip}\r\n    password: ${laputa.redis.password}\r\n    port: ${laputa.redis.port}\r\n    database: ${laputa.redis.database}\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  l2-cache-open: true\r\n  # l2-cache-open: false     # 关闭二级缓存\r\n  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  #  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${laputa.redis.ip}:${laputa.redis.port}\r\n  password: ${laputa.redis.password}\r\n  database: ${laputa.redis.database}\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000', '38c69f8b6607c385c19f6a0b299b2860', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', '', '3abb628c-2290-41c7-b3ff-65c1a961277b', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (114, 'laputa-upms-service', 'DEFAULT_GROUP', '# 在这里配置 权限服务 所有环境都能使用的配置\r\nlaputa:\r\n  mysql:\r\n    database: pd_auth\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.laputa.iot.upms.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.laputa.iot.upms.controller.common\r\n      core:\r\n        title: 组织岗位模块\r\n        base-package: com.laputa.iot.upms.controller.core\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    expire: 43200               # 外部token有效期为12小时\r\n    pri-key: client/pri.key    # 加密\r\n    pub-key: client/pub.key    # 解密\r\n\r\nserver:\r\n  port: 8764', '30cc562fa50e7cdc915334833df4967f', '2021-07-02 08:50:37', '2021-07-02 08:50:37', NULL, '222.191.229.234', '', '3abb628c-2290-41c7-b3ff-65c1a961277b', 'laputa-upms-service', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (115, 'application-dev.yml', 'DEFAULT_GROUP', '# 配置文件加密根密码\njasypt:\n  encryptor:\n    password: laputa\n    algorithm: PBEWithMD5AndDES\n    iv-generator-classname: org.jasypt.iv.NoIvGenerator\n\nspring:\n  redis:\n    host: ${REDIS_HOST:redis.laputa-iot.com}\n  servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 100MB\n  cloud:\n    sentinel:\n      eager: true\n      filter:\n        url-patterns: /** \n      transport:\n        dashboard: sentinel.laputa-iot.com:5020\n\n# 端点对外暴露\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'          \n  endpoint:\n    health:\n      show-details: ALWAYS\n# feign 相关配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 20000\n        readTimeout: 20000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n#开启灰度\ngray:\n  rule:\n    enabled: true\n\n# mybatis-plus 配置\nmybatis-plus:\n  tenant-enable: ture\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  global-config:\n    banner: false\n    db-config:\n      db-type: oracle\n      id-type: auto\n      select-strategy: not_empty\n      insert-strategy: not_empty\n      update-strategy: not_empty\n  type-handlers-package:  com.laputa.iot.common.data.handler\n  configuration:\n    jdbc-type-for-null: null\n# swagger 全局配置\nswagger:\n  enabled: true\n  title: Laputa IOT Swagger API\n  license: Powered By Laputa\n  licenseUrl: https://www.laputa-iot.com/\n  terms-of-service-url: https://laputa-iot.com/\n  contact:\n    email: sommer_jiang@163.com\n    url: https://laputa-iot.com/about.html\n  authorization:\n    name: oauth2\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: server\n        description: server all\n    token-url-list:\n      - http://${GATEWAY_HOST:gateway.laputa-iot.com}:${GATEWAY_PORT:9999}/auth/oauth/token\n\n# oauth2 资源服务器相关配置\nsecurity:\n  oauth2:\n    client:\n      ignore-urls:\n        - /error\n        - /actuator/**\n        - /v2/api-docs\n    resource:\n      loadBalanced: true\n      token-info-uri: http://auth.laputa-iot.com/oauth/check_token', '22845756fdf8bc52524cc7a8c737a12e', '2021-07-10 00:15:32', '2021-07-10 04:15:11', 'nacos', '222.191.229.234', '', 'laputa-iot-dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (116, 'laputa-upms-service-dev.yml', 'DEFAULT_GROUP', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n      ignore-urls:\n        - /error\n        - /druid/**\n        - /actuator/**\n        - /v2/api-docs\n\n# 数据源\nspring:\n  autoconfigure:\n    exclude: org.springframework.cloud.gateway.config.GatewayAutoConfiguration,org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_upms}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n      stat-view-servlet:\n        enabled: true\n        allow: \"\"\n        url-pattern: /druid/*\n        #login-username: admin\n        #login-password: admin\n      filter:\n        stat:\n          enabled: true\n          log-slow-sql: true\n          slow-sql-millis: 10000\n          merge-sql: false\n        wall:\n          config:\n            multi-statement-allow: true\n\n# 文件系统 (提供测试环境，不要乱传)\noss:\n  endpoint: http://106.13.63.126:9000\n  access-key: sommer78\n  secret-key: Yvonne@1227\n  bucket-name: laputa\n\n# Logger Config\nlogging:\n  level:\n    com.laputa.iot.upms.mapper: debug\n\n# 租户表维护\nlaputa:\n  tenant:\n    column: tenant_id\n    tables:\n      - sys_user\n      - sys_role\n      - sys_menu\n      - sys_dept\n      - sys_log\n      - sys_social_details\n      - sys_dict\n      - sys_dict_item\n      - sys_public_param\n      - sys_log\n      - sys_file\n      - sys_oauth_client_details', 'f38ae5456b4e012adca123c885458600', '2021-07-10 00:15:32', '2021-07-10 01:33:52', 'nacos', '222.191.229.234', '', 'laputa-iot-dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (117, 'laputa-auth-dev.yml', 'DEFAULT_GROUP', '# 数据源\r\nspring:\r\n  freemarker:\r\n    allow-request-override: false\r\n    allow-session-override: false\r\n    cache: true\r\n    charset: UTF-8\r\n    check-template-location: true\r\n    content-type: text/html\r\n    enabled: true\r\n    expose-request-attributes: false\r\n    expose-session-attributes: false\r\n    expose-spring-macro-helpers: true\r\n    prefer-file-system-access: true\r\n    suffix: .ftl\r\n    template-loader-path: classpath:/templates/', '9ea86c6ad550b9a5adfbf212af2a6a82', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', '', 'laputa-iot-dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (118, 'laputa-gateway-dev.yml', 'DEFAULT_GROUP', 'gateway:\n  encode-key: \'laputaiotxlaputa\'\n\nswagger:\n  ignore-providers:\n    - laputa-auth\n    - laputa-tx-manager\n    - laputa-monitor\n    \nribbon:\n  rule:\n    gray-enabled: true\n\n# 验证码相关配置参考： http://t.cn/A647jEdu\naj:\n  captcha:\n    cache-type: redis\n    water-mark: laputa-iot', '4cae235a8eac53d386a840974bdb5d12', '2021-07-10 00:15:32', '2021-07-10 00:54:29', 'nacos', '222.191.229.234', '', 'laputa-iot-dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (119, 'laputa-monitor-dev.yml', 'DEFAULT_GROUP', 'spring:\n  # 安全配置\n  security:\n    user:\n      name: ENC(p/DkWitW/Lqprm1OzNdhNA==)     # laputa\n      password: ENC(p/DkWitW/Lqprm1OzNdhNA==) # laputa\n  autoconfigure:\n    exclude: com.laputa.iot.common.core.config.JacksonConfig\n  boot:\n    admin:\n      ui:\n        title: \'Laputa IOT  服务状态监控\'\n        brand: \'Laputa IOT  服务状态监控\'\n        external-views:\n          - label: \"SQL监控\"\n            url: /druid/sql.html\n            order: 2000\n            iframe: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS  #显示详细信息\n\n\n# druid 监控的服务\nmonitor:\n  applications:\n    - laputa-upms-biz', '58a352ab42f736ea68a19070291e638b', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', '', 'laputa-iot-dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (120, 'laputa-codegen-dev.yml', 'DEFAULT_GROUP', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_codegen}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n\nlaputa:\n  tenant:\n    column: tenant_id\n    tables:\n      - gen_datasource_conf', 'd845e50a83323dd9340dc56d1c043f47', '2021-07-10 00:15:32', '2021-07-10 01:34:25', 'nacos', '222.191.229.234', '', 'laputa-iot-dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (121, 'laputa-oa-platform-dev.yml', 'DEFAULT_GROUP', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n      ignore-urls:\n        - \'/actuator/**\'\n        - \'/v2/api-docs\'\n        - \'/editor-app/**\'\n        - \'/modeler.html\'\n        - \'/ws/**\'\nspring:\n  autoconfigure:\n    exclude: org.activiti.spring.boot.SecurityAutoConfiguration\n  activiti:\n    check-process-definitions: false\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_ac}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n\n# 租户表维护\nlaputa:\n  tenant:\n    column: tenant_id\n    tables:\n      - oa_leave_bill', 'd9a94c6c7dc73e2affa89097c17c3153', '2021-07-10 00:15:32', '2021-07-10 01:34:33', 'nacos', '222.191.229.234', '', 'laputa-iot-dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (122, 'laputa-mp-platform-dev.yml', 'DEFAULT_GROUP', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL-USER:root}\n      password: ${MYSQL-PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL-HOST:mysql.laputa-iot.com}:${MYSQL-PORT:3306}/${MYSQL-DB:laputa_iot_mp}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n\n\n# 租户表维护\nlaputa:\n  tenant:\n    column: tenant_id\n    tables:\n      - wx_mp_menu\n      - wx_account\n      - wx_account_fans\n      - wx_msg\n      - wx_auto_reply', '573345ee4b3b5da279c38e25927d386c', '2021-07-10 00:15:32', '2021-07-10 01:34:56', 'nacos', '222.191.229.234', '', 'laputa-iot-dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (123, 'laputa-bi-platform-dev.yml', 'DEFAULT_GROUP', 'spring:\n  # 安全配置\n  security:\n    user:\n      name: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      password: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      \n# ureport 报表相关设置\nureport:\n  debug: false\n  disableFileProvider: true\n  disableHttpSessionReportCache: true\n\n# oss 保存报表设计文件\noss:\n  bucket-name: laputa\n  access-key: sommer78\n  secret-key: Yvonne@1227\n  endpoint: http://106.13.63.126:9000/', '4a0c866bb154f664c6e3c8ca17c7a398', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', '', 'laputa-iot-dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (124, 'laputa-pay-platform-dev.yml', 'DEFAULT_GROUP', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_pay}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  freemarker:\n    allow-request-override: false\n    allow-session-override: false\n    cache: true\n    charset: UTF-8\n    check-template-location: true\n    content-type: text/html\n    enabled: true\n    expose-request-attributes: false\n    expose-session-attributes: false\n    expose-spring-macro-helpers: true\n    prefer-file-system-access: true\n    suffix: .ftl\n    template-loader-path: classpath:/templates/\n# 租户表维护\nlaputa:\n  pay:\n    test: laputa\n    aliPayConfig:\n      expire-time: 30\n      return-url: http://laputa-iot.com\n      notify-url: http://ali.laputa-iot.com/pay/notify/ali/callbak\n    wxPayConfig:\n      notify-url: https://wechat.laputa-iot.com/pay/notify/wx/callbak\n    mergePayConfig:\n      return-url: http://laputa-iot.com\n      notify-url: http://wechat.laputa-iot.com/pay/notify/merge/callbak\n  xsequence:    #发号器相关配置\n    db:\n      retry-times: 3\n      table-name: pay_sequence\n  tenant:\n    column: tenant_id\n    tables:\n      - pay_channel\n      - pay_trade_order\n      - pay_goods_order\n      - pay_notify_record', '90a650e96e30f9934b097fcde48cd364', '2021-07-10 00:15:32', '2021-07-10 01:35:28', 'nacos', '222.191.229.234', '', 'laputa-iot-dev', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (125, 'laputa-tx-manager-dev.yml', 'DEFAULT_GROUP', '# 页面配置\nspring:\n  mvc:\n    static-path-pattern: /**\n  resources:\n    static-locations: classpath:/static/\n\n\n# LCN 配置\ntm:\n  transaction:\n    netty:\n      delaytime: 5   # 客户端链接最大通讯时间 （秒）\n      hearttime: 15  # 客户端心跳时间   （秒）\n  redis:\n    savemaxtime: 30  # redis 保存时间  （秒）\n  socket:\n    port: 9998       # 通讯端口\n    maxconnection: 1000  #最大链接数\n  compensate:\n    auto: false   #是否自动补偿\n    notifyUrl: http://ip:port/path #补偿结果通知（配消息总线里面）\n    tryTime: 30     # z再次重试时间间隔\n    maxWaitTime: 5000   # 请求超时的最大时间 (毫秒)', '885f5c125f2df7a08692929ccce154be', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', '', 'laputa-iot-dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (126, 'laputa-daemon-quartz-dev.yml', 'DEFAULT_GROUP', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_job}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n  quartz:\n    #相关属性配置\n    properties:\n      org:\n        quartz:\n          scheduler:\n            instanceName: clusteredScheduler\n            instanceId: AUTO\n          jobStore:\n            class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            tablePrefix: QRTZ_\n            isClustered: true\n            clusterCheckinInterval: 10000\n            useProperties: false\n          threadPool:\n            class: org.quartz.simpl.SimpleThreadPool\n            threadCount: 50\n            threadPriority: 5\n            threadsInheritContextClassLoaderOfInitializingThread: true\n    #数据库方式\n    job-store-type: jdbc\n    #初始化表结构\n    #jdbc:\n    #initialize-schema: never\n\n', '36623b791b6fec2491a4bef24df6c70d', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', '', 'laputa-iot-dev', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (127, 'laputa-device-service-dev.yml', 'DEFAULT_GROUP', '## spring security 配置\r\nsecurity:\r\n  oauth2:\r\n    client:\r\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\r\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\r\n      scope: server\r\n      ignore-urls:\r\n        - /error\r\n        - /druid/**\r\n        - /actuator/**\r\n        - /v2/api-docs\r\n\r\n# 数据源\r\nspring:\r\n  autoconfigure:\r\n    exclude: org.springframework.cloud.gateway.config.GatewayAutoConfiguration,org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration\r\n  datasource:\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      driver-class-name: com.mysql.cj.jdbc.Driver\r\n      username: ${MYSQL_USER:root}\r\n      password: ${MYSQL_PWD:Yvonne@1227}\r\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_device}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\r\n      stat-view-servlet:\r\n        enabled: true\r\n        allow: \"\"\r\n        url-pattern: /druid/*\r\n        #login-username: admin\r\n        #login-password: admin\r\n      filter:\r\n        stat:\r\n          enabled: true\r\n          log-slow-sql: true\r\n          slow-sql-millis: 10000\r\n          merge-sql: false\r\n        wall:\r\n          config:\r\n            multi-statement-allow: true\r\n\r\n\r\n\r\n# Logger Config\r\nlogging:\r\n  level:\r\n    com.laputa.iot.device.mapper: debug\r\n\r\n', 'c745784d048054c506cd7828cfb57828', '2021-07-10 00:22:54', '2021-07-10 00:22:54', NULL, '222.191.229.234', '', 'laputa-iot-dev', NULL, NULL, NULL, 'yaml', NULL);

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(0) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(0) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(0) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(0) UNSIGNED NOT NULL,
  `nid` bigint(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 81 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (38, 22, 'mogu-admin-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8601\n\ndata:\n  # 门户页面  如果没有域名，使用 http://localhost:9527/#/\n  webSite:\n    url: http://demoweb.moguit.cn/#/\n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/wx_picture/raw/master/picture/2.png\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\n#阿里大于\ntemplateCode: SMS_XXXXXX #短信模板编号\nsignName: 蘑菇博客\n\n# 邮箱验证\nmoguBlog:\n  email: mogublog@163.com\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#spring\nspring:\n  jackson:\n    serialization:\n      INDENT_OUTPUT: true\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n  jmx:\n    default-domain: mogu-admin\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-admin\n  security:\n    user:\n      name: user\n      password: password123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: 127.0.0.1 #redis的主机ip\n    port: 6379\n\n  rabbitmq:\n    host: 127.0.0.1 #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: guest\n    password: guest\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8601\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 192.168.6.189:8848\n\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n##jwt配置\ntokenHead: bearer_\ntokenHeader: Authorization\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  clientId: 098f6bcd4621d373cade4e832627b4f6\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n  name: mogublog\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '92ffdf7211740f6965d8f97f0e633fea', '2021-06-26 04:40:24', '2021-06-26 04:40:24', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (40, 23, 'mogu-monitor-dev.yaml', 'dev', '', 'server:\n  port: 8606\n\nspring:\n  application:\n    name: mogu-monitor\n  security:\n    user:\n      name: user\n      password: password123\n  boot:\n    admin:\n      ui:\n        title: 蘑菇博客监控中心\n        brand: 蘑菇博客监控中心\n      username: user\n      password: password123\n      notify:\n        mail:\n          enabled: false\n          # 服务上下线会自动发送邮件\n          #from: mogublog@163.com\n          #to: moxi0624@163.com\n\n  #mail\n  mail:\n    username: mogublog@163.com\n    password: a1313375 #授权码开启SMTP服务里设置\n    host: smtp.163.com\n\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n            required: true\n          ssl:\n            enable: true\n\n#eureka相关配置\n#eureka:\n#  client:\n#    healthcheck:\n#      enabled: true\n#    serviceUrl:\n#      defaultZone: http://user:password123@localhost:8761/eureka\n#  instance:\n#    prefer-ip-address: true\n#    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\n#    health-check-url-path: /actuator/health\n#    metadata-map:\n#      user.name: admin\n#      user.password: 123456\n#    lease-renewal-interval-in-seconds: 5\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 192.168.6.189:8848', 'ad92e336c8f3f8fe93225713ac3cd9a2', '2021-06-26 04:40:50', '2021-06-26 04:40:51', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (72, 24, 'mogu-commons.yml', 'dev', '', '#spring\r\nspring:\r\n  jackson:\r\n    serialization:\r\n      INDENT_OUTPUT: true\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Shanghai\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n\r\n  rabbitmq:\r\n    host: 127.0.0.1 #rabbitmq的主机ip\r\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\r\n    username: guest\r\n    password: guest\r\n\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8601\r\n\r\n  #nacos相关配置\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848', '3303e8039783d9763934b63639c27cd9', '2021-06-26 04:49:57', '2021-06-26 04:49:58', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (39, 25, 'mogu-gateway-dev.yaml', 'dev', '', 'server:\r\n  port: 8607\r\n\r\nspring:\r\n  application:\r\n    name: mogu-gateway\r\n  cloud:\r\n    nacos:\r\n      discovery:\r\n        server-addr: 192.168.6.189:8848\r\n      config:\r\n        server-addr: 192.168.6.189:8848\r\n        file-extension: yaml\r\n        group: dev\r\n', '5e2b3893347291f54f6d69acb89b03e2', '2021-06-26 04:50:16', '2021-06-26 04:50:17', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (39, 26, 'mogu-gateway-dev.yaml', 'dev', '', 'server:\n  port: 8607\n\nspring:\n  application:\n    name: mogu-gateway\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 129.211.7.213:8848\n      config:\n        server-addr: 129.211.7.213:8848\n        file-extension: yaml\n        group: dev\n', '2a1eba4bdc3217d74dbde0c7ac123f3a', '2021-06-26 05:04:58', '2021-06-26 05:04:58', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (59, 27, 'mogu-web-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8603\n\ndata:\n  # 门户页面  如果有域名：http://www.moguit.cn/#/   如果没有域名：http://localhost:9527/#/\n  webSite:\n    url: http://localhost:9527/#/\n  \n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/mogu_blog_v2/raw/Nacos/doc/icon/favicon2.ico\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\nfile:\n  upload:\n    path: D:/mogu_blog/data/\n\n# 蘑菇博客登录默认密码\nDEFAULE_PWD: mogu2018\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#请求限制参数\nrequest-limit:\n  start: false # 是否开启请求限制，默认关闭\n  amount: 100 # 100次\n  time: 60000 # 1分钟\n\n#博客相关配置\nBLOG:\n  HOT_COUNT: 5 #热门博客数量\n  HOT_TAG_COUNT: 20 #热门标签数量\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\n  NEW_COUNT: 15 #最新博客数据\n  FIRST_COUNT: 5 #一级推荐\n  SECOND_COUNT: 2 #二级推荐\n  THIRD_COUNT: 3 #三级推荐\n  FOURTH_COUNT: 5 #四级推荐\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\n\n  # 原创模板\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\n  # 转载模板\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 %S ，版权归 %S 所有，如果侵权之处，请联系博主进行删除，谢谢~\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu-web\n  # freemarker相关配置\n  freemarker:\n    charset: utf-8\n    suffix: .ftl\n    content-type: text/html\n    template-loader-path: classpath:/templates\n  # jackson配置响应时间格式、时区\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n\n  application:\n    name: mogu-web\n  security:\n    user:\n      name: user\n      password: password123\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://localhost:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 5\n    minIdle: 5\n    maxActive: 50\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #Solr配置信息\n  data:\n    solr:\n      host: http://localhost:8080/solr\n      core: collection1\n      repositories:\n        enabled: true\n\n  #redis\n  redis:\n    host: 127.0.0.1 #redis的主机ip\n    port: 6379\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  rabbitmq:\n    host: 127.0.0.1 #rabbitmq的主机ip\n    port: 5672\n    username: guest\n    password: guest\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8603\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n\n# 设置feign调用超时时间\nribbon:\n  ReadTimeout: 20000\n  ConnectTimeout: 20000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\njustAuth:\n  clientId:\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e # 改成自己的\n    github: c99bfe31f8774ec8e242 # 改成自己的\n    qq: 101880644  # 改成自己的\n  clientSecret:\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47 # 改成自己的\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618 # 改成自己的\n    qq: cbc294d36dabeac4bf6c31ced8bf930f # 改成自己的\n\n# uniapp相关配置，如果需要发布移动端博客小程序时使用\nuniapp:\n  qq:\n    appid: 1110769790  # 改成自己的\n    secret: zWZBLzBcekMUTP60  # 改成自己的\n    grant_type: authorization_code', 'feb4f11adeb19cf976f211930a82321f', '2021-06-26 05:06:29', '2021-06-26 05:06:29', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (59, 28, 'mogu-web-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8603\n\ndata:\n  # 门户页面  如果有域名：http://www.moguit.cn/#/   如果没有域名：http://localhost:9527/#/\n  webSite:\n    url: http://localhost:9527/#/\n  \n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/mogu_blog_v2/raw/Nacos/doc/icon/favicon2.ico\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\nfile:\n  upload:\n    path: D:/mogu_blog/data/\n\n# 蘑菇博客登录默认密码\nDEFAULE_PWD: mogu2018\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#请求限制参数\nrequest-limit:\n  start: false # 是否开启请求限制，默认关闭\n  amount: 100 # 100次\n  time: 60000 # 1分钟\n\n#博客相关配置\nBLOG:\n  HOT_COUNT: 5 #热门博客数量\n  HOT_TAG_COUNT: 20 #热门标签数量\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\n  NEW_COUNT: 15 #最新博客数据\n  FIRST_COUNT: 5 #一级推荐\n  SECOND_COUNT: 2 #二级推荐\n  THIRD_COUNT: 3 #三级推荐\n  FOURTH_COUNT: 5 #四级推荐\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\n\n  # 原创模板\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\n  # 转载模板\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 %S ，版权归 %S 所有，如果侵权之处，请联系博主进行删除，谢谢~\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu-web\n  # freemarker相关配置\n  freemarker:\n    charset: utf-8\n    suffix: .ftl\n    content-type: text/html\n    template-loader-path: classpath:/templates\n  # jackson配置响应时间格式、时区\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n\n  application:\n    name: mogu-web\n  security:\n    user:\n      name: user\n      password: password123\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: Yvonne@1227\n    url: jdbc:mysql://192.168.6.189:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 5\n    minIdle: 5\n    maxActive: 50\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #Solr配置信息\n  data:\n    solr:\n      host: http://localhost:8080/solr\n      core: collection1\n      repositories:\n        enabled: true\n\n  #redis\n  redis:\n    host: 129.211.7.213 #redis的主机ip\n    port: 6379\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  rabbitmq:\n    host: 129.211.7.213 #rabbitmq的主机ip\n    port: 5672\n    username: guest\n    password: guest\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8603\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n\n# 设置feign调用超时时间\nribbon:\n  ReadTimeout: 20000\n  ConnectTimeout: 20000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\njustAuth:\n  clientId:\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e # 改成自己的\n    github: c99bfe31f8774ec8e242 # 改成自己的\n    qq: 101880644  # 改成自己的\n  clientSecret:\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47 # 改成自己的\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618 # 改成自己的\n    qq: cbc294d36dabeac4bf6c31ced8bf930f # 改成自己的\n\n# uniapp相关配置，如果需要发布移动端博客小程序时使用\nuniapp:\n  qq:\n    appid: 1110769790  # 改成自己的\n    secret: zWZBLzBcekMUTP60  # 改成自己的\n    grant_type: authorization_code', 'fd601cc4144d79c632ed01638a2efbcd', '2021-06-26 05:09:58', '2021-06-26 05:09:59', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (38, 29, 'mogu-admin-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8601\n\ndata:\n  # 门户页面  如果没有域名，使用 http://localhost:9527/#/\n  webSite:\n    url: http://demoweb.moguit.cn/#/\n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/wx_picture/raw/master/picture/2.png\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\n#阿里大于\ntemplateCode: SMS_XXXXXX #短信模板编号\nsignName: 蘑菇博客\n\n# 邮箱验证\nmoguBlog:\n  email: mogublog@163.com\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#spring\nspring:\n  jackson:\n    serialization:\n      INDENT_OUTPUT: true\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n  jmx:\n    default-domain: mogu-admin\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-admin\n  security:\n    user:\n      name: user\n      password: password123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: Yvonne@1227\n    url: jdbc:mysql://192.168.6.189:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: 129.211.7.213/ #redis的主机ip\n    port: 6379\n\n  rabbitmq:\n    host: 127.0.0.1 #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: guest\n    password: guest\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8601\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 129.211.7.213:8848\n\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n##jwt配置\ntokenHead: bearer_\ntokenHeader: Authorization\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  clientId: 098f6bcd4621d373cade4e832627b4f6\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n  name: mogublog\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', 'e06a2a1f1182d953963f7deb98ec1706', '2021-06-26 05:10:16', '2021-06-26 05:10:17', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (38, 30, 'mogu-admin-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8601\n\ndata:\n  # 门户页面  如果没有域名，使用 http://localhost:9527/#/\n  webSite:\n    url: http://demoweb.moguit.cn/#/\n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/wx_picture/raw/master/picture/2.png\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\n#阿里大于\ntemplateCode: SMS_XXXXXX #短信模板编号\nsignName: 蘑菇博客\n\n# 邮箱验证\nmoguBlog:\n  email: mogublog@163.com\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#spring\nspring:\n  jackson:\n    serialization:\n      INDENT_OUTPUT: true\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n  jmx:\n    default-domain: mogu-admin\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-admin\n  security:\n    user:\n      name: user\n      password: password123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://192.168.6.189:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: 129.211.7.213/ #redis的主机ip\n    port: 6379\n\n  rabbitmq:\n    host: 127.0.0.1 #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: guest\n    password: guest\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8601\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 129.211.7.213:8848\n\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n##jwt配置\ntokenHead: bearer_\ntokenHeader: Authorization\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  clientId: 098f6bcd4621d373cade4e832627b4f6\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n  name: mogublog\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '9632c3c12fbad91dee118c0b85d1db7b', '2021-06-26 05:18:04', '2021-06-26 05:18:04', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (41, 31, 'mogu-picture-dev.yaml', 'dev', '', '#app\r\nserver:\r\n  port: 8602\r\n  max-http-header-size: 102400\r\n\r\nfile:\r\n  upload:\r\n    path: D:/mogu_blog/data/\r\n\r\n#spring\r\nspring:\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      max-file-size: 100MB # 修改单次文件上传文件大小不能超过100MB\r\n      max-request-size: 500MB # 设置单次文件请求总大小不能超过500MB\r\n\r\n  jmx:\r\n    default-domain: mogu-picture\r\n  thymeleaf:\r\n    cache: true   #关闭缓存\r\n  application:\r\n    name: mogu-picture\r\n  security:\r\n    user:\r\n      name: user\r\n      password: password123\r\n  boot:\r\n    admin:\r\n      client:\r\n        enabled: true\r\n        url: http://localhost:8606\r\n        username: user\r\n        password: password123\r\n        instance:\r\n          service-base-url: http://localhost:8602\r\n\r\n  #redis\r\n  redis:\r\n    host: 127.0.0.1 #redis的主机ip\r\n    port: 6379\r\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\r\n\r\n  # sleuth 配置\r\n  sleuth:\r\n    web:\r\n      client:\r\n        enabled: true\r\n    sampler:\r\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\r\n  # zipkin 配置\r\n  zipkin:\r\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\r\n\r\n  # DATABASE CONFIG\r\n  datasource:\r\n    username: root\r\n    password: root\r\n    url: jdbc:mysql://localhost:3306/mogu_picture?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=GMT%2B8\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n\r\n    initialSize: 5\r\n    minIdle: 5\r\n    maxActive: 20\r\n    maxWait: 60000\r\n    timeBetweenEvictionRunsMillis: 60000\r\n    minEvictableIdleTimeMillis: 300000\r\n    testWhileIdle: true\r\n    testOnBorrow: false\r\n    testOnReturn: false\r\n    poolPreparedStatements: true\r\n\r\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\r\n    filters: stat,wall,log4j\r\n    maxPoolPreparedStatementPerConnectionSize: 20\r\n    useGlobalDataSourceStat: true\r\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\r\n  mvc:\r\n    static-path-pattern: /upload/**\r\n  resources:\r\n    static-locations: classpath:/static/upload\r\n\r\n# eureka:\r\n#   client:\r\n#     healthcheck:\r\n#       enabled: true\r\n#     registerWithEureka: true\r\n#     fetchRegistry: true\r\n#     serviceUrl:\r\n#       defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/\r\n#   instance:\r\n#     prefer-ip-address: true\r\n#     instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}\r\n#     lease-renewal-interval-in-seconds: 5\r\n#     appname: mogu-picture\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: \"*\"\r\n  endpoint:\r\n    health:\r\n      show-details: always\r\n\r\n#mybatis\r\nmybatis-plus:\r\n  mapper-locations: classpath:/mapper/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\r\n  global-config:\r\n    # 数据库相关配置\r\n    db-config:\r\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\r\n      id-type: UUID\r\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\r\n      field-strategy: NOT_EMPTY\r\n      #驼峰下划线转换\r\n      column-underline: true\r\n      #数据库大写下划线转换\r\n      #capital-mode: true\r\n      #逻辑删除配置\r\n      logic-delete-value: 0\r\n      logic-not-delete-value: 1\r\n      db-type: mysql\r\n    #刷新mapper 调试神器\r\n    refresh: true\r\n  # 原生配置\r\n  configuration:\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false', '2bde327418e18e7fe54fae7b8cdeacaa', '2021-06-26 05:23:00', '2021-06-26 05:23:01', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (59, 32, 'mogu-web-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8603\n\ndata:\n  # 门户页面  如果有域名：http://www.moguit.cn/#/   如果没有域名：http://localhost:9527/#/\n  webSite:\n    url: http://localhost:9527/#/\n  \n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/mogu_blog_v2/raw/Nacos/doc/icon/favicon2.ico\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\nfile:\n  upload:\n    path: D:/mogu_blog/data/\n\n# 蘑菇博客登录默认密码\nDEFAULE_PWD: mogu2018\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#请求限制参数\nrequest-limit:\n  start: false # 是否开启请求限制，默认关闭\n  amount: 100 # 100次\n  time: 60000 # 1分钟\n\n#博客相关配置\nBLOG:\n  HOT_COUNT: 5 #热门博客数量\n  HOT_TAG_COUNT: 20 #热门标签数量\n  FRIENDLY_LINK_COUNT: 20 #友情链接数\n  NEW_COUNT: 15 #最新博客数据\n  FIRST_COUNT: 5 #一级推荐\n  SECOND_COUNT: 2 #二级推荐\n  THIRD_COUNT: 3 #三级推荐\n  FOURTH_COUNT: 5 #四级推荐\n  USER_TOKEN_SURVIVAL_TIME: 168 # toekn令牌存活时间, 7天  168 = 7*24\n\n  # 原创模板\n  ORIGINAL_TEMPLATE: 本文为蘑菇博客原创文章，转载无需和我联系，但请注明来自蘑菇博客 http://www.moguit.cn\n  # 转载模板\n  REPRINTED_TEMPLATE: 本着开源共享、共同学习的精神，本文转载自 %S ，版权归 %S 所有，如果侵权之处，请联系博主进行删除，谢谢~\n\n#spring\nspring:\n  jmx:\n    default-domain: mogu-web\n  # freemarker相关配置\n  freemarker:\n    charset: utf-8\n    suffix: .ftl\n    content-type: text/html\n    template-loader-path: classpath:/templates\n  # jackson配置响应时间格式、时区\n  jackson:\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n\n  application:\n    name: mogu-web\n  security:\n    user:\n      name: user\n      password: password123\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://192.168.6.189:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 5\n    minIdle: 5\n    maxActive: 50\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #Solr配置信息\n  data:\n    solr:\n      host: http://localhost:8080/solr\n      core: collection1\n      repositories:\n        enabled: true\n\n  #redis\n  redis:\n    host: 129.211.7.213 #redis的主机ip\n    port: 6379\n    #password: mogu2018  # 客户端没有设置密码，服务器中redis默认密码为 mogu2018\n\n  rabbitmq:\n    host: 129.211.7.213 #rabbitmq的主机ip\n    port: 5672\n    username: guest\n    password: guest\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8603\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n\n# 设置feign调用超时时间\nribbon:\n  ReadTimeout: 20000\n  ConnectTimeout: 20000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n# 第三方登录，参考 http://moguit.cn/#/info?blogUid=fe9e352eb95205a08288f21ec3cc69e0\njustAuth:\n  clientId:\n    gitee: ec2dba332701caa209935512c69fc7962530b8619acd9b6cb03106a7c13c1c5e # 改成自己的\n    github: c99bfe31f8774ec8e242 # 改成自己的\n    qq: 101880644  # 改成自己的\n  clientSecret:\n    gitee: 993930de16b61b8146f7d30c693afd328b4d42116cf2da748f275077e4ef5e47 # 改成自己的\n    github: ec088d14ab8076e2beed58fcb95e37a0fc586618 # 改成自己的\n    qq: cbc294d36dabeac4bf6c31ced8bf930f # 改成自己的\n\n# uniapp相关配置，如果需要发布移动端博客小程序时使用\nuniapp:\n  qq:\n    appid: 1110769790  # 改成自己的\n    secret: zWZBLzBcekMUTP60  # 改成自己的\n    grant_type: authorization_code', '127f68799bc4771e3ad8be96e5c1d715', '2021-06-26 05:39:57', '2021-06-26 05:39:57', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (38, 33, 'mogu-admin-dev.yaml', 'dev', '', '#app\nserver:\n  port: 8601\n\ndata:\n  # 门户页面  如果没有域名，使用 http://localhost:9527/#/\n  webSite:\n    url: http://demoweb.moguit.cn/#/\n  web:\n    # mogu_web网址，用于第三方登录回调【参考: http://www.moguit.cn/#/info?blogUid=8cbadb54967257f12d6cc7eb1a58a361】\n    url: http://127.0.0.1:8603\n    # 邮件发送时的LOGO\n    logo: https://gitee.com/moxi159753/wx_picture/raw/master/picture/2.png\n    # 项目英文名\n    project_name_en: moguBlog\n    #项目名称\n    project_name: 蘑菇博客\n\n#阿里大于\ntemplateCode: SMS_XXXXXX #短信模板编号\nsignName: 蘑菇博客\n\n# 邮箱验证\nmoguBlog:\n  email: mogublog@163.com\n\n# 日志收集线程数\nlog:\n  thread:\n    corePoolSize: 5\n    maxPoolSize: 15\n\n#spring\nspring:\n  jackson:\n    serialization:\n      INDENT_OUTPUT: true\n    date-format: yyyy-MM-dd HH:mm:ss\n    time-zone: Asia/Shanghai\n  jmx:\n    default-domain: mogu-admin\n  thymeleaf:\n    cache: true   #关闭缓存\n  application:\n    name: mogu-admin\n  security:\n    user:\n      name: user\n      password: password123\n\n  # sleuth 配置\n  sleuth:\n    web:\n      client:\n        enabled: true\n    sampler:\n      probability: 1.0 # 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。\n  # zipkin 配置\n  zipkin:\n    base-url: http://localhost:9411  # 指定了Zipkin服务器的地址\n\n  # DATABASE CONFIG\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://192.168.6.189:3306/mogu_blog?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    type: com.alibaba.druid.pool.DruidDataSource\n\n    # 初始化大小，最小，最大\n    initialSize: 20\n    minIdle: 5\n    maxActive: 200\n\n    #连接等待超时时间\n    maxWait: 60000\n\n    #配置隔多久进行一次检测(检测可以关闭的空闲连接)\n    timeBetweenEvictionRunsMillis: 60000\n\n    #配置连接在池中的最小生存时间\n    minEvictableIdleTimeMillis: 300000\n\n    validationQuery: SELECT 1 FROM DUAL\n\n    dbcp:\n      remove-abandoned: true\n      #泄露的连接可以被删除的超时时间（秒），该值应设置为应用程序查询可能执行的最长时间\n      remove-abandoned-timeout: 180\n\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n\n    #配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙\n    filters: stat,wall,log4j\n    maxPoolPreparedStatementPerConnectionSize: 20\n    useGlobalDataSourceStat: true\n    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500\n\n  #redis\n  redis:\n    host: 129.211.7.213 #redis的主机ip\n    port: 6379\n\n  rabbitmq:\n    host: 127.0.0.1 #rabbitmq的主机ip\n    port: 5672      # 注意5672才是RabbitMQ通信端口号！！ 15672是图形化界面的端口\n    username: guest\n    password: guest\n\n  boot:\n    admin:\n      client:\n        enabled: true\n        url: http://localhost:8606\n        username: user\n        password: password123\n        instance:\n          service-base-url: http://localhost:8601\n\n  #nacos相关配置\n  cloud:\n    nacos:\n      discovery:\n        server-addr: 129.211.7.213:8848\n\n\n# 激活Sentinel对Feign的支持\nfeign:\n  sentinel:\n    enabled: true\n\n#ribbon的超时时间 30秒\nribbon:\n  ReadTimeout: 30000\n  ConnectTimeout: 30000\n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n  endpoint:\n    health:\n      show-details: always\n\n#mybatis\nmybatis-plus:\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.moxi.mogublog.commons.entity\n  global-config:\n    # 数据库相关配置\n    db-config:\n      #主键类型  0:\"数据库ID自增\", 1:\"用户输入ID\",2:\"全局唯一ID (数字类型唯一ID)\", 3:\"全局唯一ID UUID\";\n      id-type: UUID\n      #字段策略 IGNORED:\"忽略判断\",NOT_NULL:\"非 NULL 判断\"),NOT_EMPTY:\"非空判断\"\n      field-strategy: NOT_EMPTY\n      #驼峰下划线转换\n      column-underline: true\n      #数据库大写下划线转换\n      #capital-mode: true\n      #逻辑删除配置\n      logic-delete-value: 0\n      logic-not-delete-value: 1\n      db-type: mysql\n    #刷新mapper 调试神器\n    refresh: true\n  # 原生配置\n  configuration:\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n\n##jwt配置\ntokenHead: bearer_\ntokenHeader: Authorization\nisRememberMeExpiresSecond: 604800 #记住账号为7天有效 3600*24*7=604800\naudience:\n  clientId: 098f6bcd4621d373cade4e832627b4f6\n  base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n  name: mogublog\n  expiresSecond: 7200  #2个小时 3600*2=7200\n  refreshSecond: 600 # 刷新token的时间10分钟 60*10=600', '5f1b6b7e972e81bd3834510522d48390', '2021-06-26 06:16:23', '2021-06-26 06:16:24', 'nacos', '222.191.229.234', 'U', 'dev');
INSERT INTO `his_config_info` VALUES (0, 34, 'common.yml', 'DEFAULT_GROUP', '', 'server:\r\n  undertow: # jetty  undertow\r\n    io-threads: 8 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 120  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\nspring:\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 512MB      # Max file size，默认1M\r\n      max-request-size: 512MB   # Max request size，默认10M\r\n\r\ndozer:\r\n  mappingFiles:\r\n    - classpath:dozer/global.dozer.xml\r\n    - classpath:dozer/biz.dozer.xml\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n\r\nfeign:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  hystrix:\r\n    enabled: true   # feign 熔断机制是否开启\r\n    #支持压缩的mime types\r\n  compression:  # 请求压缩\r\n    request:\r\n      enabled: true\r\n      mime-types: text/xml,application/xml,application/json\r\n      min-request-size: 2048\r\n    response:  # 响应压缩\r\n      enabled: true\r\n\r\nribbon:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  eureka:\r\n    enabled: true\r\n  ReadTimeout: 30000     #\r\n  ConnectTimeout: 30000  # [ribbon超时时间]大于[熔断超时],那么会先走熔断，相当于你配的ribbon超时就不生效了  ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n  MaxAutoRetries: 0             # 最大自动重试\r\n  MaxAutoRetriesNextServer: 1   # 最大自动像下一个服务重试\r\n  OkToRetryOnAllOperations: false  #无论是请求超时或者socket read timeout都进行重试，\r\n\r\nhystrix:\r\n  threadpool:\r\n    default:\r\n      coreSize: 1000 # #并发执行的最大线程数，默认10\r\n      maxQueueSize: 1000 # #BlockingQueue的最大队列数\r\n      queueSizeRejectionThreshold: 500 # #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 120000  # 熔断超时 ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n\r\nid-generator:\r\n  machine-code: 1  # id生成器机器掩码', 'f33766c1ef74680c95b4bf4b107d0d52', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', 'I', '19e1e427-3a53-4c4e-8425-9be62a4db557');
INSERT INTO `his_config_info` VALUES (0, 35, 'mysql.yml', 'DEFAULT_GROUP', '', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制\r\n# 到具体环境的配置文件中进行修改即可\r\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\r\nlaputa:\r\n  mysql:\r\n    ip: 127.0.0.1\r\n    port: 3306\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    database: pd_auth\r\n    username: root\r\n    password: root\r\n  database:\r\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\r\n\r\n# mysql 通用配置\r\nspring:\r\n  datasource:\r\n    druid:\r\n      username: ${laputa.mysql.username}\r\n      password: ${laputa.mysql.password}\r\n      driver-class-name: ${laputa.mysql.driverClassName}\r\n      url: jdbc:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 500\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: laputa\r\n        login-password: laputa\r\n\r\nmybatis-plus:\r\n  mapper-locations:\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.itheima.laputa.*.entity;com.itheima.laputa.database.mybatis.typehandler\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，\r\n    #自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n', 'a23f0b95d443fa068362c29fd3fb5b39', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', 'I', '19e1e427-3a53-4c4e-8425-9be62a4db557');
INSERT INTO `his_config_info` VALUES (0, 36, 'pd-auth-server-dev.yml', 'DEFAULT_GROUP', '', '# p6spy是一个开源项目，通常使用它来跟踪数据库操作，查看程序运行过程中执行的sql语句\r\n# 开发环境需要使用p6spy进行sql语句输出\r\n# 但p6spy会有性能损耗，不适合在生产线使用，故其他环境无需配置\r\nspring:\r\n  datasource:\r\n    driver-class-name: com.p6spy.engine.spy.P6SpyDriver\r\n    url: jdbc:p6spy:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n    db-type: mysql\r\n', '9065a0332fbdba347cdf530ff2afe99f', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', 'I', '19e1e427-3a53-4c4e-8425-9be62a4db557');
INSERT INTO `his_config_info` VALUES (0, 37, 'pd-auth-server.yml', 'DEFAULT_GROUP', '', '# 在这里配置 权限服务 所有环境都能使用的配置\r\nlaputa:\r\n  mysql:\r\n    database: pd_auth\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.itheima.laputa.authority.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.itheima.laputa.authority.controller.common\r\n      core:\r\n        title: 组织岗位模块\r\n        base-package: com.itheima.laputa.authority.controller.core\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    expire: 43200               # 外部token有效期为12小时\r\n    pri-key: client/pri.key    # 加密\r\n    pub-key: client/pub.key    # 解密\r\n\r\nserver:\r\n  port: 8764\r\n', '40188236b25255fd3aec6d911dc32194', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', 'I', '19e1e427-3a53-4c4e-8425-9be62a4db557');
INSERT INTO `his_config_info` VALUES (0, 38, 'pd-gateway.yml', 'DEFAULT_GROUP', '', 'laputa:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  mvc:\r\n    servlet:\r\n      path: /gate\r\n\r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path\r\n\r\nzuul:\r\n  #  debug:\r\n  #    request: true\r\n  #  include-debug-header: true\r\n  retryable: false\r\n  servlet-path: /         # 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀\r\n  ignored-services: \"*\"   # 忽略eureka上的所有服务\r\n  sensitive-headers:  # 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置\r\n  #  prefix: /api #为zuul设置一个公共的前缀\r\n  #  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除\r\n  routes:  # 路由配置方式\r\n    authority:  # 其中 authority 是路由名称，可以随便定义，但是path和service-id需要一一对应\r\n      path: /authority/**\r\n      serviceId: pd-auth-server\r\n    file:\r\n      path: /file/**\r\n      serviceId: pd-file-server\r\n\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    pub-key: client/pub.key    # 解密\r\n', 'fedfb2b57249ee0ecd380a203cb17ddb', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', 'I', '19e1e427-3a53-4c4e-8425-9be62a4db557');
INSERT INTO `his_config_info` VALUES (0, 39, 'redis.yml', 'DEFAULT_GROUP', '', '# redis 通用配置， 不同的环境，需要配置不同的链接信息，\r\n# 只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\r\nlaputa:\r\n  redis:\r\n    ip: 127.0.0.1\r\n    port: 6379\r\n    password:\r\n    database: 0\r\n\r\nspring:\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${laputa.redis.ip}\r\n    password: ${laputa.redis.password}\r\n    port: ${laputa.redis.port}\r\n    database: ${laputa.redis.database}\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  l2-cache-open: true\r\n  # l2-cache-open: false     # 关闭二级缓存\r\n  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  #  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${laputa.redis.ip}:${laputa.redis.port}\r\n  password: ${laputa.redis.password}\r\n  database: ${laputa.redis.database}\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000', '38c69f8b6607c385c19f6a0b299b2860', '2021-06-29 06:39:17', '2021-06-29 06:39:17', NULL, '222.191.229.234', 'I', '19e1e427-3a53-4c4e-8425-9be62a4db557');
INSERT INTO `his_config_info` VALUES (96, 40, 'mysql.yml', 'DEFAULT_GROUP', '', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制\r\n# 到具体环境的配置文件中进行修改即可\r\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\r\nlaputa:\r\n  mysql:\r\n    ip: 127.0.0.1\r\n    port: 3306\r\n    driverClassName: com.mysql.cj.jdbc.Driver\r\n    database: pd_auth\r\n    username: root\r\n    password: root\r\n  database:\r\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\r\n\r\n# mysql 通用配置\r\nspring:\r\n  datasource:\r\n    druid:\r\n      username: ${laputa.mysql.username}\r\n      password: ${laputa.mysql.password}\r\n      driver-class-name: ${laputa.mysql.driverClassName}\r\n      url: jdbc:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n      db-type: mysql\r\n      initialSize: 10\r\n      minIdle: 10\r\n      maxActive: 500\r\n      max-wait: 60000\r\n      pool-prepared-statements: true\r\n      max-pool-prepared-statement-per-connection-size: 20\r\n      validation-query: SELECT \'x\'\r\n      test-on-borrow: false\r\n      test-on-return: false\r\n      test-while-idle: true\r\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\r\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\r\n      filters: stat,wall\r\n      filter:\r\n        wall:\r\n          enabled: true\r\n          config:\r\n            commentAllow: true\r\n            multiStatementAllow: true\r\n            noneBaseStatementAllow: true\r\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\r\n        enabled: true\r\n        url-pattern: /*\r\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\r\n        session-stat-max-count: 1000\r\n        profile-enable: true\r\n        session-stat-enable: false\r\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\r\n        enabled: true\r\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\r\n        reset-enable: true    #允许清空统计数据\r\n        login-username: laputa\r\n        login-password: laputa\r\n\r\nmybatis-plus:\r\n  mapper-locations:\r\n    - classpath*:mapper_**/**/*Mapper.xml\r\n  #实体扫描，多个package用逗号或者分号分隔\r\n  typeAliasesPackage: com.itheima.laputa.*.entity;com.itheima.laputa.database.mybatis.typehandler\r\n  global-config:\r\n    db-config:\r\n      id-type: INPUT\r\n      insert-strategy: NOT_NULL\r\n      update-strategy: NOT_NULL\r\n      select-strategy: NOT_EMPTY\r\n  configuration:\r\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，\r\n    #自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\r\n    map-underscore-to-camel-case: true\r\n    cache-enabled: false\r\n    #配置JdbcTypeForNull, oracle数据库必须配置\r\n    jdbc-type-for-null: \'null\'\r\n', 'a23f0b95d443fa068362c29fd3fb5b39', '2021-06-29 07:02:00', '2021-06-29 07:02:00', 'nacos', '222.191.229.234', 'U', '19e1e427-3a53-4c4e-8425-9be62a4db557');
INSERT INTO `his_config_info` VALUES (0, 41, 'common.yml', 'DEFAULT_GROUP', '', 'server:\r\n  undertow: # jetty  undertow\r\n    io-threads: 8 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 120  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\nspring:\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 512MB      # Max file size，默认1M\r\n      max-request-size: 512MB   # Max request size，默认10M\r\n\r\ndozer:\r\n  mappingFiles:\r\n    - classpath:dozer/global.dozer.xml\r\n    - classpath:dozer/biz.dozer.xml\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n\r\nfeign:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  hystrix:\r\n    enabled: true   # feign 熔断机制是否开启\r\n    #支持压缩的mime types\r\n  compression:  # 请求压缩\r\n    request:\r\n      enabled: true\r\n      mime-types: text/xml,application/xml,application/json\r\n      min-request-size: 2048\r\n    response:  # 响应压缩\r\n      enabled: true\r\n\r\nribbon:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  eureka:\r\n    enabled: true\r\n  ReadTimeout: 30000     #\r\n  ConnectTimeout: 30000  # [ribbon超时时间]大于[熔断超时],那么会先走熔断，相当于你配的ribbon超时就不生效了  ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n  MaxAutoRetries: 0             # 最大自动重试\r\n  MaxAutoRetriesNextServer: 1   # 最大自动像下一个服务重试\r\n  OkToRetryOnAllOperations: false  #无论是请求超时或者socket read timeout都进行重试，\r\n\r\nhystrix:\r\n  threadpool:\r\n    default:\r\n      coreSize: 1000 # #并发执行的最大线程数，默认10\r\n      maxQueueSize: 1000 # #BlockingQueue的最大队列数\r\n      queueSizeRejectionThreshold: 500 # #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 120000  # 熔断超时 ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n\r\nid-generator:\r\n  machine-code: 1  # id生成器机器掩码', 'f33766c1ef74680c95b4bf4b107d0d52', '2021-07-02 07:38:16', '2021-07-02 07:38:16', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 42, 'mysql.yml', 'DEFAULT_GROUP', '', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制\n# 到具体环境的配置文件中进行修改即可\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\nlaputa:\n  mysql:\n    ip: 192.168.6.189\n    port: 3306\n    driverClassName: com.mysql.cj.jdbc.Driver\n    database: pd_auth\n    username: root\n    password: root\n  database:\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\n\n# mysql 通用配置\nspring:\n  datasource:\n    druid:\n      username: ${laputa.mysql.username}\n      password: ${laputa.mysql.password}\n      driver-class-name: ${laputa.mysql.driverClassName}\n      url: jdbc:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\n      db-type: mysql\n      initialSize: 10\n      minIdle: 10\n      maxActive: 500\n      max-wait: 60000\n      pool-prepared-statements: true\n      max-pool-prepared-statement-per-connection-size: 20\n      validation-query: SELECT \'x\'\n      test-on-borrow: false\n      test-on-return: false\n      test-while-idle: true\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\n      filters: stat,wall\n      filter:\n        wall:\n          enabled: true\n          config:\n            commentAllow: true\n            multiStatementAllow: true\n            noneBaseStatementAllow: true\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\n        enabled: true\n        url-pattern: /*\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\n        session-stat-max-count: 1000\n        profile-enable: true\n        session-stat-enable: false\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\n        enabled: true\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\n        reset-enable: true    #允许清空统计数据\n        login-username: laputa\n        login-password: laputa\n\nmybatis-plus:\n  mapper-locations:\n    - classpath*:mapper_**/**/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.itheima.laputa.*.entity;com.itheima.laputa.database.mybatis.typehandler\n  global-config:\n    db-config:\n      id-type: INPUT\n      insert-strategy: NOT_NULL\n      update-strategy: NOT_NULL\n      select-strategy: NOT_EMPTY\n  configuration:\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，\n    #自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n    #配置JdbcTypeForNull, oracle数据库必须配置\n    jdbc-type-for-null: \'null\'\n', 'b45e11d3eaf6d7bd17f324b28bf01b28', '2021-07-02 07:38:16', '2021-07-02 07:38:16', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 43, 'pd-auth-server-dev.yml', 'DEFAULT_GROUP', '', '# p6spy是一个开源项目，通常使用它来跟踪数据库操作，查看程序运行过程中执行的sql语句\r\n# 开发环境需要使用p6spy进行sql语句输出\r\n# 但p6spy会有性能损耗，不适合在生产线使用，故其他环境无需配置\r\nspring:\r\n  datasource:\r\n    driver-class-name: com.p6spy.engine.spy.P6SpyDriver\r\n    url: jdbc:p6spy:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n    db-type: mysql\r\n', '9065a0332fbdba347cdf530ff2afe99f', '2021-07-02 07:38:16', '2021-07-02 07:38:16', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 44, 'pd-auth-server.yml', 'DEFAULT_GROUP', '', '# 在这里配置 权限服务 所有环境都能使用的配置\r\nlaputa:\r\n  mysql:\r\n    database: pd_auth\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.itheima.laputa.authority.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.itheima.laputa.authority.controller.common\r\n      core:\r\n        title: 组织岗位模块\r\n        base-package: com.itheima.laputa.authority.controller.core\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    expire: 43200               # 外部token有效期为12小时\r\n    pri-key: client/pri.key    # 加密\r\n    pub-key: client/pub.key    # 解密\r\n\r\nserver:\r\n  port: 8764\r\n', '40188236b25255fd3aec6d911dc32194', '2021-07-02 07:38:16', '2021-07-02 07:38:16', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 45, 'pd-gateway.yml', 'DEFAULT_GROUP', '', 'laputa:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  mvc:\r\n    servlet:\r\n      path: /gate\r\n\r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path\r\n\r\nzuul:\r\n  #  debug:\r\n  #    request: true\r\n  #  include-debug-header: true\r\n  retryable: false\r\n  servlet-path: /         # 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀\r\n  ignored-services: \"*\"   # 忽略eureka上的所有服务\r\n  sensitive-headers:  # 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置\r\n  #  prefix: /api #为zuul设置一个公共的前缀\r\n  #  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除\r\n  routes:  # 路由配置方式\r\n    authority:  # 其中 authority 是路由名称，可以随便定义，但是path和service-id需要一一对应\r\n      path: /authority/**\r\n      serviceId: pd-auth-server\r\n    file:\r\n      path: /file/**\r\n      serviceId: pd-file-server\r\n\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    pub-key: client/pub.key    # 解密\r\n', 'fedfb2b57249ee0ecd380a203cb17ddb', '2021-07-02 07:38:16', '2021-07-02 07:38:16', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 46, 'redis.yml', 'DEFAULT_GROUP', '', '# redis 通用配置， 不同的环境，需要配置不同的链接信息，\r\n# 只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\r\nlaputa:\r\n  redis:\r\n    ip: 127.0.0.1\r\n    port: 6379\r\n    password:\r\n    database: 0\r\n\r\nspring:\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${laputa.redis.ip}\r\n    password: ${laputa.redis.password}\r\n    port: ${laputa.redis.port}\r\n    database: ${laputa.redis.database}\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  l2-cache-open: true\r\n  # l2-cache-open: false     # 关闭二级缓存\r\n  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  #  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${laputa.redis.ip}:${laputa.redis.port}\r\n  password: ${laputa.redis.password}\r\n  database: ${laputa.redis.database}\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000', '38c69f8b6607c385c19f6a0b299b2860', '2021-07-02 07:38:16', '2021-07-02 07:38:16', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 47, 'common.yml', 'DEFAULT_GROUP', '', 'server:\r\n  undertow: # jetty  undertow\r\n    io-threads: 8 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 120  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\nspring:\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 512MB      # Max file size，默认1M\r\n      max-request-size: 512MB   # Max request size，默认10M\r\n\r\ndozer:\r\n  mappingFiles:\r\n    - classpath:dozer/global.dozer.xml\r\n    - classpath:dozer/biz.dozer.xml\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n\r\nfeign:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  hystrix:\r\n    enabled: true   # feign 熔断机制是否开启\r\n    #支持压缩的mime types\r\n  compression:  # 请求压缩\r\n    request:\r\n      enabled: true\r\n      mime-types: text/xml,application/xml,application/json\r\n      min-request-size: 2048\r\n    response:  # 响应压缩\r\n      enabled: true\r\n\r\nribbon:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  eureka:\r\n    enabled: true\r\n  ReadTimeout: 30000     #\r\n  ConnectTimeout: 30000  # [ribbon超时时间]大于[熔断超时],那么会先走熔断，相当于你配的ribbon超时就不生效了  ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n  MaxAutoRetries: 0             # 最大自动重试\r\n  MaxAutoRetriesNextServer: 1   # 最大自动像下一个服务重试\r\n  OkToRetryOnAllOperations: false  #无论是请求超时或者socket read timeout都进行重试，\r\n\r\nhystrix:\r\n  threadpool:\r\n    default:\r\n      coreSize: 1000 # #并发执行的最大线程数，默认10\r\n      maxQueueSize: 1000 # #BlockingQueue的最大队列数\r\n      queueSizeRejectionThreshold: 500 # #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 120000  # 熔断超时 ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n\r\nid-generator:\r\n  machine-code: 1  # id生成器机器掩码', 'f33766c1ef74680c95b4bf4b107d0d52', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', 'I', '3abb628c-2290-41c7-b3ff-65c1a961277b');
INSERT INTO `his_config_info` VALUES (0, 48, 'mysql.yml', 'DEFAULT_GROUP', '', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制\n# 到具体环境的配置文件中进行修改即可\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\nlaputa:\n  mysql:\n    ip: 192.168.6.189\n    port: 3306\n    driverClassName: com.mysql.cj.jdbc.Driver\n    database: pd_auth\n    username: root\n    password: root\n  database:\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\n\n# mysql 通用配置\nspring:\n  datasource:\n    druid:\n      username: ${laputa.mysql.username}\n      password: ${laputa.mysql.password}\n      driver-class-name: ${laputa.mysql.driverClassName}\n      url: jdbc:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\n      db-type: mysql\n      initialSize: 10\n      minIdle: 10\n      maxActive: 500\n      max-wait: 60000\n      pool-prepared-statements: true\n      max-pool-prepared-statement-per-connection-size: 20\n      validation-query: SELECT \'x\'\n      test-on-borrow: false\n      test-on-return: false\n      test-while-idle: true\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\n      filters: stat,wall\n      filter:\n        wall:\n          enabled: true\n          config:\n            commentAllow: true\n            multiStatementAllow: true\n            noneBaseStatementAllow: true\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\n        enabled: true\n        url-pattern: /*\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\n        session-stat-max-count: 1000\n        profile-enable: true\n        session-stat-enable: false\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\n        enabled: true\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\n        reset-enable: true    #允许清空统计数据\n        login-username: laputa\n        login-password: laputa\n\nmybatis-plus:\n  mapper-locations:\n    - classpath*:mapper_**/**/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.itheima.laputa.*.entity;com.itheima.laputa.database.mybatis.typehandler\n  global-config:\n    db-config:\n      id-type: INPUT\n      insert-strategy: NOT_NULL\n      update-strategy: NOT_NULL\n      select-strategy: NOT_EMPTY\n  configuration:\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，\n    #自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n    #配置JdbcTypeForNull, oracle数据库必须配置\n    jdbc-type-for-null: \'null\'\n', 'b45e11d3eaf6d7bd17f324b28bf01b28', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', 'I', '3abb628c-2290-41c7-b3ff-65c1a961277b');
INSERT INTO `his_config_info` VALUES (0, 49, 'pd-auth-server-dev.yml', 'DEFAULT_GROUP', '', '# p6spy是一个开源项目，通常使用它来跟踪数据库操作，查看程序运行过程中执行的sql语句\r\n# 开发环境需要使用p6spy进行sql语句输出\r\n# 但p6spy会有性能损耗，不适合在生产线使用，故其他环境无需配置\r\nspring:\r\n  datasource:\r\n    driver-class-name: com.p6spy.engine.spy.P6SpyDriver\r\n    url: jdbc:p6spy:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n    db-type: mysql\r\n', '9065a0332fbdba347cdf530ff2afe99f', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', 'I', '3abb628c-2290-41c7-b3ff-65c1a961277b');
INSERT INTO `his_config_info` VALUES (0, 50, 'pd-auth-server.yml', 'DEFAULT_GROUP', '', '# 在这里配置 权限服务 所有环境都能使用的配置\r\nlaputa:\r\n  mysql:\r\n    database: pd_auth\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.itheima.laputa.authority.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.itheima.laputa.authority.controller.common\r\n      core:\r\n        title: 组织岗位模块\r\n        base-package: com.itheima.laputa.authority.controller.core\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    expire: 43200               # 外部token有效期为12小时\r\n    pri-key: client/pri.key    # 加密\r\n    pub-key: client/pub.key    # 解密\r\n\r\nserver:\r\n  port: 8764\r\n', '40188236b25255fd3aec6d911dc32194', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', 'I', '3abb628c-2290-41c7-b3ff-65c1a961277b');
INSERT INTO `his_config_info` VALUES (0, 51, 'pd-gateway.yml', 'DEFAULT_GROUP', '', 'laputa:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  mvc:\r\n    servlet:\r\n      path: /gate\r\n\r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path\r\n\r\nzuul:\r\n  #  debug:\r\n  #    request: true\r\n  #  include-debug-header: true\r\n  retryable: false\r\n  servlet-path: /         # 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀\r\n  ignored-services: \"*\"   # 忽略eureka上的所有服务\r\n  sensitive-headers:  # 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置\r\n  #  prefix: /api #为zuul设置一个公共的前缀\r\n  #  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除\r\n  routes:  # 路由配置方式\r\n    authority:  # 其中 authority 是路由名称，可以随便定义，但是path和service-id需要一一对应\r\n      path: /authority/**\r\n      serviceId: pd-auth-server\r\n    file:\r\n      path: /file/**\r\n      serviceId: pd-file-server\r\n\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    pub-key: client/pub.key    # 解密\r\n', 'fedfb2b57249ee0ecd380a203cb17ddb', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', 'I', '3abb628c-2290-41c7-b3ff-65c1a961277b');
INSERT INTO `his_config_info` VALUES (0, 52, 'redis.yml', 'DEFAULT_GROUP', '', '# redis 通用配置， 不同的环境，需要配置不同的链接信息，\r\n# 只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\r\nlaputa:\r\n  redis:\r\n    ip: 127.0.0.1\r\n    port: 6379\r\n    password:\r\n    database: 0\r\n\r\nspring:\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${laputa.redis.ip}\r\n    password: ${laputa.redis.password}\r\n    port: ${laputa.redis.port}\r\n    database: ${laputa.redis.database}\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  l2-cache-open: true\r\n  # l2-cache-open: false     # 关闭二级缓存\r\n  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  #  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${laputa.redis.ip}:${laputa.redis.port}\r\n  password: ${laputa.redis.password}\r\n  database: ${laputa.redis.database}\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000', '38c69f8b6607c385c19f6a0b299b2860', '2021-07-02 08:48:26', '2021-07-02 08:48:26', NULL, '222.191.229.234', 'I', '3abb628c-2290-41c7-b3ff-65c1a961277b');
INSERT INTO `his_config_info` VALUES (0, 53, 'laputa-upms-service', 'DEFAULT_GROUP', '', '# 在这里配置 权限服务 所有环境都能使用的配置\r\nlaputa:\r\n  mysql:\r\n    database: pd_auth\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.laputa.iot.upms.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.laputa.iot.upms.controller.common\r\n      core:\r\n        title: 组织岗位模块\r\n        base-package: com.laputa.iot.upms.controller.core\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    expire: 43200               # 外部token有效期为12小时\r\n    pri-key: client/pri.key    # 加密\r\n    pub-key: client/pub.key    # 解密\r\n\r\nserver:\r\n  port: 8764', '30cc562fa50e7cdc915334833df4967f', '2021-07-02 08:50:37', '2021-07-02 08:50:37', NULL, '222.191.229.234', 'I', '3abb628c-2290-41c7-b3ff-65c1a961277b');
INSERT INTO `his_config_info` VALUES (0, 54, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 配置文件加密根密码\njasypt:\n  encryptor:\n    password: laputa\n    algorithm: PBEWithMD5AndDES\n    iv-generator-classname: org.jasypt.iv.NoIvGenerator\n\nspring:\n  redis:\n    host: redis.laputa-iot.com\n  servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 100MB\n  cloud:\n    sentinel:\n      eager: true\n      filter:\n        url-patterns: /** \n      transport:\n        dashboard: pigx-sentinel:5020\n\n# 端点对外暴露\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'          \n  endpoint:\n    health:\n      show-details: ALWAYS\n# feign 相关配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 20000\n        readTimeout: 20000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n#开启灰度\ngray:\n  rule:\n    enabled: true\n\n# mybatis-plus 配置\nmybatis-plus:\n  tenant-enable: ture\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  global-config:\n    banner: false\n    db-config:\n      db-type: oracle\n      id-type: auto\n      select-strategy: not_empty\n      insert-strategy: not_empty\n      update-strategy: not_empty\n  type-handlers-package:  com.laputa.iot.common.data.handler\n  configuration:\n    jdbc-type-for-null: null\n# swagger 全局配置\nswagger:\n  enabled: true\n  title: Laputa IOT Swagger API\n  license: Powered By Laputa\n  licenseUrl: https://www.laputa-iot.com/\n  terms-of-service-url: https://laputa-iot.com/\n  contact:\n    email: sommer_jiang@163.com\n    url: https://laputa-iot.com/about.html\n  authorization:\n    name: oauth2\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: server\n        description: server all\n    token-url-list:\n      - http://${GATEWAY_HOST:gateway.laputa-iot.com}:${GATEWAY_PORT:9999}/auth/oauth/token\n\n# oauth2 资源服务器相关配置\nsecurity:\n  oauth2:\n    client:\n      ignore-urls:\n        - /error\n        - /actuator/**\n        - /v2/api-docs\n    resource:\n      loadBalanced: true\n      token-info-uri: http://auth.laputa-iot.com/oauth/check_token', '07ecfcea79be8f62367a409726789303', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 55, 'laputa-upms-service-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n      ignore-urls:\n        - /error\n        - /druid/**\n        - /actuator/**\n        - /v2/api-docs\n\n# 数据源\nspring:\n  autoconfigure:\n    exclude: org.springframework.cloud.gateway.config.GatewayAutoConfiguration,org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_upms}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n      stat-view-servlet:\n        enabled: true\n        allow: \"\"\n        url-pattern: /druid/*\n        #login-username: admin\n        #login-password: admin\n      filter:\n        stat:\n          enabled: true\n          log-slow-sql: true\n          slow-sql-millis: 10000\n          merge-sql: false\n        wall:\n          config:\n            multi-statement-allow: true\n\n# 文件系统 (提供测试环境，不要乱传)\noss:\n  endpoint: http://106.13.63.126:9000\n  access-key: sommer78\n  secret-key: Yvonne@1227\n  bucket-name: laputa\n\n# Logger Config\nlogging:\n  level:\n    com.laputa.iot.upms.mapper: debug\n\n# 租户表维护\npigx:\n  tenant:\n    column: tenant_id\n    tables:\n      - sys_user\n      - sys_role\n      - sys_menu\n      - sys_dept\n      - sys_log\n      - sys_social_details\n      - sys_dict\n      - sys_dict_item\n      - sys_public_param\n      - sys_log\n      - sys_file\n      - sys_oauth_client_details', 'a55b71946a67fa2b69fe343a91a74ea7', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 56, 'laputa-auth-dev.yml', 'DEFAULT_GROUP', '', '# 数据源\r\nspring:\r\n  freemarker:\r\n    allow-request-override: false\r\n    allow-session-override: false\r\n    cache: true\r\n    charset: UTF-8\r\n    check-template-location: true\r\n    content-type: text/html\r\n    enabled: true\r\n    expose-request-attributes: false\r\n    expose-session-attributes: false\r\n    expose-spring-macro-helpers: true\r\n    prefer-file-system-access: true\r\n    suffix: .ftl\r\n    template-loader-path: classpath:/templates/', '9ea86c6ad550b9a5adfbf212af2a6a82', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 57, 'laputa-gateway-dev.yml', 'DEFAULT_GROUP', '', 'gateway:\n  encode-key: \'pigxpigxpigxpigx\'\n\nswagger:\n  ignore-providers:\n    - laputa-auth\n    - laputa-tx-manager\n    - laputa-monitor\n    \nribbon:\n  rule:\n    gray-enabled: true\n\n# 验证码相关配置参考： http://t.cn/A647jEdu\naj:\n  captcha:\n    cache-type: redis\n    water-mark: laputa-iot', '0a8aecc1db3b03422feb47cde742e40a', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 58, 'laputa-monitor-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  # 安全配置\n  security:\n    user:\n      name: ENC(p/DkWitW/Lqprm1OzNdhNA==)     # laputa\n      password: ENC(p/DkWitW/Lqprm1OzNdhNA==) # laputa\n  autoconfigure:\n    exclude: com.laputa.iot.common.core.config.JacksonConfig\n  boot:\n    admin:\n      ui:\n        title: \'Laputa IOT  服务状态监控\'\n        brand: \'Laputa IOT  服务状态监控\'\n        external-views:\n          - label: \"SQL监控\"\n            url: /druid/sql.html\n            order: 2000\n            iframe: true\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: ALWAYS  #显示详细信息\n\n\n# druid 监控的服务\nmonitor:\n  applications:\n    - laputa-upms-biz', '58a352ab42f736ea68a19070291e638b', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 59, 'laputa-codegen-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_codegen}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n\npigx:\n  tenant:\n    column: tenant_id\n    tables:\n      - gen_datasource_conf', '4382d5680e6661bdd01f87a66606f7bc', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 60, 'laputa-oa-platform-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n      ignore-urls:\n        - \'/actuator/**\'\n        - \'/v2/api-docs\'\n        - \'/editor-app/**\'\n        - \'/modeler.html\'\n        - \'/ws/**\'\nspring:\n  autoconfigure:\n    exclude: org.activiti.spring.boot.SecurityAutoConfiguration\n  activiti:\n    check-process-definitions: false\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_ac}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n\n# 租户表维护\npigx:\n  tenant:\n    column: tenant_id\n    tables:\n      - oa_leave_bill', '5c030bcc5c4bd85df7c4bc8d0bb652a5', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 61, 'laputa-mp-platform-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL-USER:root}\n      password: ${MYSQL-PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL-HOST:mysql.laputa-iot.com}:${MYSQL-PORT:3306}/${MYSQL-DB:laputa_iot_mp}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n\n\n# 租户表维护\npigx:\n  tenant:\n    column: tenant_id\n    tables:\n      - wx_mp_menu\n      - wx_account\n      - wx_account_fans\n      - wx_msg\n      - wx_auto_reply', 'e558abac77feaa871e6be7369f301611', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 62, 'laputa-bi-platform-dev.yml', 'DEFAULT_GROUP', '', 'spring:\n  # 安全配置\n  security:\n    user:\n      name: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      password: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      \n# ureport 报表相关设置\nureport:\n  debug: false\n  disableFileProvider: true\n  disableHttpSessionReportCache: true\n\n# oss 保存报表设计文件\noss:\n  bucket-name: laputa\n  access-key: sommer78\n  secret-key: Yvonne@1227\n  endpoint: http://106.13.63.126:9000/', '4a0c866bb154f664c6e3c8ca17c7a398', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 63, 'laputa-pay-platform-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_pay}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  freemarker:\n    allow-request-override: false\n    allow-session-override: false\n    cache: true\n    charset: UTF-8\n    check-template-location: true\n    content-type: text/html\n    enabled: true\n    expose-request-attributes: false\n    expose-session-attributes: false\n    expose-spring-macro-helpers: true\n    prefer-file-system-access: true\n    suffix: .ftl\n    template-loader-path: classpath:/templates/\n# 租户表维护\npigx:\n  pay:\n    test: lengleng\n    aliPayConfig:\n      expire-time: 30\n      return-url: http://laputa-iot.com\n      notify-url: http://ali.laputa-iot.com/pay/notify/ali/callbak\n    wxPayConfig:\n      notify-url: https://wechat.laputa-iot.com/pay/notify/wx/callbak\n    mergePayConfig:\n      return-url: http://laputa-iot.com\n      notify-url: http://wechat.laputa-iot.com/pay/notify/merge/callbak\n  xsequence:    #发号器相关配置\n    db:\n      retry-times: 3\n      table-name: pay_sequence\n  tenant:\n    column: tenant_id\n    tables:\n      - pay_channel\n      - pay_trade_order\n      - pay_goods_order\n      - pay_notify_record', '10cdc6367b3f7e765a0de863e5cdce87', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 64, 'laputa-tx-manager-dev.yml', 'DEFAULT_GROUP', '', '# 页面配置\nspring:\n  mvc:\n    static-path-pattern: /**\n  resources:\n    static-locations: classpath:/static/\n\n\n# LCN 配置\ntm:\n  transaction:\n    netty:\n      delaytime: 5   # 客户端链接最大通讯时间 （秒）\n      hearttime: 15  # 客户端心跳时间   （秒）\n  redis:\n    savemaxtime: 30  # redis 保存时间  （秒）\n  socket:\n    port: 9998       # 通讯端口\n    maxconnection: 1000  #最大链接数\n  compensate:\n    auto: false   #是否自动补偿\n    notifyUrl: http://ip:port/path #补偿结果通知（配消息总线里面）\n    tryTime: 30     # z再次重试时间间隔\n    maxWaitTime: 5000   # 请求超时的最大时间 (毫秒)', '885f5c125f2df7a08692929ccce154be', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 65, 'laputa-daemon-quartz-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_job}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n  quartz:\n    #相关属性配置\n    properties:\n      org:\n        quartz:\n          scheduler:\n            instanceName: clusteredScheduler\n            instanceId: AUTO\n          jobStore:\n            class: org.quartz.impl.jdbcjobstore.JobStoreTX\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            tablePrefix: QRTZ_\n            isClustered: true\n            clusterCheckinInterval: 10000\n            useProperties: false\n          threadPool:\n            class: org.quartz.simpl.SimpleThreadPool\n            threadCount: 50\n            threadPriority: 5\n            threadsInheritContextClassLoaderOfInitializingThread: true\n    #数据库方式\n    job-store-type: jdbc\n    #初始化表结构\n    #jdbc:\n    #initialize-schema: never\n\n', '36623b791b6fec2491a4bef24df6c70d', '2021-07-10 00:15:32', '2021-07-10 00:15:32', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (104, 66, 'pd-auth-server-dev.yml', 'DEFAULT_GROUP', '', '# p6spy是一个开源项目，通常使用它来跟踪数据库操作，查看程序运行过程中执行的sql语句\r\n# 开发环境需要使用p6spy进行sql语句输出\r\n# 但p6spy会有性能损耗，不适合在生产线使用，故其他环境无需配置\r\nspring:\r\n  datasource:\r\n    driver-class-name: com.p6spy.engine.spy.P6SpyDriver\r\n    url: jdbc:p6spy:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\r\n    db-type: mysql\r\n', '9065a0332fbdba347cdf530ff2afe99f', '2021-07-10 00:15:39', '2021-07-10 00:15:40', NULL, '222.191.229.234', 'D', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (103, 67, 'mysql.yml', 'DEFAULT_GROUP', '', '# mysql 个性化配置， 不同的环境，需要配置不同的链接信息，只需要将这段信息复制\n# 到具体环境的配置文件中进行修改即可\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\nlaputa:\n  mysql:\n    ip: 192.168.6.189\n    port: 3306\n    driverClassName: com.mysql.cj.jdbc.Driver\n    database: pd_auth\n    username: root\n    password: root\n  database:\n    isBlockAttack: false  # 是否启用 攻击 SQL 阻断解析器\n\n# mysql 通用配置\nspring:\n  datasource:\n    druid:\n      username: ${laputa.mysql.username}\n      password: ${laputa.mysql.password}\n      driver-class-name: ${laputa.mysql.driverClassName}\n      url: jdbc:mysql://${laputa.mysql.ip}:${laputa.mysql.port}/${laputa.mysql.database}?serverTimezone=CTT&characterEncoding=utf8&useUnicode=true&useSSL=false&autoReconnect=true&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true\n      db-type: mysql\n      initialSize: 10\n      minIdle: 10\n      maxActive: 500\n      max-wait: 60000\n      pool-prepared-statements: true\n      max-pool-prepared-statement-per-connection-size: 20\n      validation-query: SELECT \'x\'\n      test-on-borrow: false\n      test-on-return: false\n      test-while-idle: true\n      time-between-eviction-runs-millis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒\n      min-evictable-idle-time-millis: 300000    #配置一个连接在池中最小生存的时间，单位是毫秒\n      filters: stat,wall\n      filter:\n        wall:\n          enabled: true\n          config:\n            commentAllow: true\n            multiStatementAllow: true\n            noneBaseStatementAllow: true\n      web-stat-filter:  # WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter\n        enabled: true\n        url-pattern: /*\n        exclusions: \"*.js , *.gif ,*.jpg ,*.png ,*.css ,*.ico , /druid/*\"\n        session-stat-max-count: 1000\n        profile-enable: true\n        session-stat-enable: false\n      stat-view-servlet:  #展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API\n        enabled: true\n        url-pattern: /druid/*   #根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html例如：http://127.0.0.1:9000/druid/index.html\n        reset-enable: true    #允许清空统计数据\n        login-username: laputa\n        login-password: laputa\n\nmybatis-plus:\n  mapper-locations:\n    - classpath*:mapper_**/**/*Mapper.xml\n  #实体扫描，多个package用逗号或者分号分隔\n  typeAliasesPackage: com.itheima.laputa.*.entity;com.itheima.laputa.database.mybatis.typehandler\n  global-config:\n    db-config:\n      id-type: INPUT\n      insert-strategy: NOT_NULL\n      update-strategy: NOT_NULL\n      select-strategy: NOT_EMPTY\n  configuration:\n    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，\n    #自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）\n    map-underscore-to-camel-case: true\n    cache-enabled: false\n    #配置JdbcTypeForNull, oracle数据库必须配置\n    jdbc-type-for-null: \'null\'\n', 'b45e11d3eaf6d7bd17f324b28bf01b28', '2021-07-10 00:15:43', '2021-07-10 00:15:44', NULL, '222.191.229.234', 'D', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (102, 68, 'common.yml', 'DEFAULT_GROUP', '', 'server:\r\n  undertow: # jetty  undertow\r\n    io-threads: 8 # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程\r\n    worker-threads: 120  # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载\r\n    buffer-size: 2048  # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理 , 每块buffer的空间大小,越小的空间被利用越充分\r\n    direct-buffers: true  # 是否分配的直接内存\r\n\r\nspring:\r\n  http:\r\n    encoding:\r\n      charset: UTF-8\r\n      force: true\r\n      enabled: true\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 512MB      # Max file size，默认1M\r\n      max-request-size: 512MB   # Max request size，默认10M\r\n\r\ndozer:\r\n  mappingFiles:\r\n    - classpath:dozer/global.dozer.xml\r\n    - classpath:dozer/biz.dozer.xml\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      base-path: /actuator\r\n      exposure:\r\n        include: \'*\'\r\n  endpoint:\r\n    health:\r\n      show-details: ALWAYS\r\n      enabled: true\r\n\r\nfeign:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  hystrix:\r\n    enabled: true   # feign 熔断机制是否开启\r\n    #支持压缩的mime types\r\n  compression:  # 请求压缩\r\n    request:\r\n      enabled: true\r\n      mime-types: text/xml,application/xml,application/json\r\n      min-request-size: 2048\r\n    response:  # 响应压缩\r\n      enabled: true\r\n\r\nribbon:\r\n  httpclient:\r\n    enabled: false\r\n  okhttp:\r\n    enabled: true\r\n  eureka:\r\n    enabled: true\r\n  ReadTimeout: 30000     #\r\n  ConnectTimeout: 30000  # [ribbon超时时间]大于[熔断超时],那么会先走熔断，相当于你配的ribbon超时就不生效了  ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n  MaxAutoRetries: 0             # 最大自动重试\r\n  MaxAutoRetriesNextServer: 1   # 最大自动像下一个服务重试\r\n  OkToRetryOnAllOperations: false  #无论是请求超时或者socket read timeout都进行重试，\r\n\r\nhystrix:\r\n  threadpool:\r\n    default:\r\n      coreSize: 1000 # #并发执行的最大线程数，默认10\r\n      maxQueueSize: 1000 # #BlockingQueue的最大队列数\r\n      queueSizeRejectionThreshold: 500 # #即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 120000  # 熔断超时 ribbon和hystrix是同时生效的，哪个值小哪个生效\r\n\r\nid-generator:\r\n  machine-code: 1  # id生成器机器掩码', 'f33766c1ef74680c95b4bf4b107d0d52', '2021-07-10 00:15:47', '2021-07-10 00:15:47', NULL, '222.191.229.234', 'D', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (106, 69, 'pd-gateway.yml', 'DEFAULT_GROUP', '', 'laputa:\r\n  log:\r\n    enabled: false\r\n\r\nspring:\r\n  mvc:\r\n    servlet:\r\n      path: /gate\r\n\r\nserver:\r\n  port: 8760\r\n  servlet:\r\n    context-path: /api  # = server.servlet.context-path\r\n\r\nzuul:\r\n  #  debug:\r\n  #    request: true\r\n  #  include-debug-header: true\r\n  retryable: false\r\n  servlet-path: /         # 默认是/zuul , 上传文件需要加/zuul前缀才不会出现乱码，这个改成/ 即可不加前缀\r\n  ignored-services: \"*\"   # 忽略eureka上的所有服务\r\n  sensitive-headers:  # 一些比较敏感的请求头，不想通过zuul传递过去， 可以通过该属性进行设置\r\n  #  prefix: /api #为zuul设置一个公共的前缀\r\n  #  strip-prefix: false     #对于代理前缀默认会被移除   故加入false  表示不要移除\r\n  routes:  # 路由配置方式\r\n    authority:  # 其中 authority 是路由名称，可以随便定义，但是path和service-id需要一一对应\r\n      path: /authority/**\r\n      serviceId: pd-auth-server\r\n    file:\r\n      path: /file/**\r\n      serviceId: pd-file-server\r\n\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    pub-key: client/pub.key    # 解密\r\n', 'fedfb2b57249ee0ecd380a203cb17ddb', '2021-07-10 00:15:52', '2021-07-10 00:15:52', NULL, '222.191.229.234', 'D', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (105, 70, 'pd-auth-server.yml', 'DEFAULT_GROUP', '', '# 在这里配置 权限服务 所有环境都能使用的配置\r\nlaputa:\r\n  mysql:\r\n    database: pd_auth\r\n  swagger:\r\n    enabled: true\r\n    docket:\r\n      auth:\r\n        title: 权限模块\r\n        base-package: com.itheima.laputa.authority.controller.auth\r\n      common:\r\n        title: 公共模块\r\n        base-package: com.itheima.laputa.authority.controller.common\r\n      core:\r\n        title: 组织岗位模块\r\n        base-package: com.itheima.laputa.authority.controller.core\r\n\r\nauthentication:\r\n  user:\r\n    header-name: token\r\n    expire: 43200               # 外部token有效期为12小时\r\n    pri-key: client/pri.key    # 加密\r\n    pub-key: client/pub.key    # 解密\r\n\r\nserver:\r\n  port: 8764\r\n', '40188236b25255fd3aec6d911dc32194', '2021-07-10 00:15:57', '2021-07-10 00:15:57', NULL, '222.191.229.234', 'D', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (107, 71, 'redis.yml', 'DEFAULT_GROUP', '', '# redis 通用配置， 不同的环境，需要配置不同的链接信息，\r\n# 只需要将这段信息复制到具体环境的配置文件中进行修改即可\r\n# 如：复制到pd-auth-server-dev.yml中将数据库名和ip改掉\r\nlaputa:\r\n  redis:\r\n    ip: 127.0.0.1\r\n    port: 6379\r\n    password:\r\n    database: 0\r\n\r\nspring:\r\n  cache:\r\n    type: GENERIC\r\n  redis:\r\n    host: ${laputa.redis.ip}\r\n    password: ${laputa.redis.password}\r\n    port: ${laputa.redis.port}\r\n    database: ${laputa.redis.database}\r\n\r\nj2cache:\r\n  #  config-location: /j2cache.properties\r\n  open-spring-cache: true\r\n  cache-clean-mode: passive\r\n  allow-null-values: true\r\n  redis-client: lettuce\r\n  l2-cache-open: true\r\n  # l2-cache-open: false     # 关闭二级缓存\r\n  broadcast: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy\r\n  #  broadcast: jgroups       # 关闭二级缓存\r\n  L1:\r\n    provider_class: caffeine\r\n  L2:\r\n    provider_class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider\r\n    config_section: lettuce\r\n  sync_ttl_to_redis: true\r\n  default_cache_null_object: false\r\n  serialization: fst\r\ncaffeine:\r\n  properties: /j2cache/caffeine.properties   # 这个配置文件需要放在项目中\r\nlettuce:\r\n  mode: single\r\n  namespace:\r\n  storage: generic\r\n  channel: j2cache\r\n  scheme: redis\r\n  hosts: ${laputa.redis.ip}:${laputa.redis.port}\r\n  password: ${laputa.redis.password}\r\n  database: ${laputa.redis.database}\r\n  sentinelMasterId:\r\n  maxTotal: 100\r\n  maxIdle: 10\r\n  minIdle: 10\r\n  timeout: 10000', '38c69f8b6607c385c19f6a0b299b2860', '2021-07-10 00:16:20', '2021-07-10 00:16:20', NULL, '222.191.229.234', 'D', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (0, 72, 'laputa-device-service-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\r\nsecurity:\r\n  oauth2:\r\n    client:\r\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\r\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\r\n      scope: server\r\n      ignore-urls:\r\n        - /error\r\n        - /druid/**\r\n        - /actuator/**\r\n        - /v2/api-docs\r\n\r\n# 数据源\r\nspring:\r\n  autoconfigure:\r\n    exclude: org.springframework.cloud.gateway.config.GatewayAutoConfiguration,org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration\r\n  datasource:\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    druid:\r\n      driver-class-name: com.mysql.cj.jdbc.Driver\r\n      username: ${MYSQL_USER:root}\r\n      password: ${MYSQL_PWD:Yvonne@1227}\r\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_device}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\r\n      stat-view-servlet:\r\n        enabled: true\r\n        allow: \"\"\r\n        url-pattern: /druid/*\r\n        #login-username: admin\r\n        #login-password: admin\r\n      filter:\r\n        stat:\r\n          enabled: true\r\n          log-slow-sql: true\r\n          slow-sql-millis: 10000\r\n          merge-sql: false\r\n        wall:\r\n          config:\r\n            multi-statement-allow: true\r\n\r\n\r\n\r\n# Logger Config\r\nlogging:\r\n  level:\r\n    com.laputa.iot.device.mapper: debug\r\n\r\n', 'c745784d048054c506cd7828cfb57828', '2021-07-10 00:22:53', '2021-07-10 00:22:54', NULL, '222.191.229.234', 'I', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (118, 73, 'laputa-gateway-dev.yml', 'DEFAULT_GROUP', '', 'gateway:\n  encode-key: \'pigxpigxpigxpigx\'\n\nswagger:\n  ignore-providers:\n    - laputa-auth\n    - laputa-tx-manager\n    - laputa-monitor\n    \nribbon:\n  rule:\n    gray-enabled: true\n\n# 验证码相关配置参考： http://t.cn/A647jEdu\naj:\n  captcha:\n    cache-type: redis\n    water-mark: laputa-iot', '0a8aecc1db3b03422feb47cde742e40a', '2021-07-10 00:53:00', '2021-07-10 00:53:01', 'nacos', '222.191.229.234', 'U', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (118, 74, 'laputa-gateway-dev.yml', 'DEFAULT_GROUP', '', 'gateway:\n  # encode-key: \'pigxpigxpigxpigx\'\n  encode-key: \'laputaiotxlaputa\'\n\nswagger:\n  ignore-providers:\n    - laputa-auth\n    - laputa-tx-manager\n    - laputa-monitor\n    \nribbon:\n  rule:\n    gray-enabled: true\n\n# 验证码相关配置参考： http://t.cn/A647jEdu\naj:\n  captcha:\n    cache-type: redis\n    water-mark: laputa-iot', 'b28374da39214ce22e23552fbc936098', '2021-07-10 00:54:29', '2021-07-10 00:54:29', 'nacos', '222.191.229.234', 'U', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (116, 75, 'laputa-upms-service-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n      ignore-urls:\n        - /error\n        - /druid/**\n        - /actuator/**\n        - /v2/api-docs\n\n# 数据源\nspring:\n  autoconfigure:\n    exclude: org.springframework.cloud.gateway.config.GatewayAutoConfiguration,org.springframework.cloud.gateway.config.GatewayClassPathWarningAutoConfiguration\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_upms}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n      stat-view-servlet:\n        enabled: true\n        allow: \"\"\n        url-pattern: /druid/*\n        #login-username: admin\n        #login-password: admin\n      filter:\n        stat:\n          enabled: true\n          log-slow-sql: true\n          slow-sql-millis: 10000\n          merge-sql: false\n        wall:\n          config:\n            multi-statement-allow: true\n\n# 文件系统 (提供测试环境，不要乱传)\noss:\n  endpoint: http://106.13.63.126:9000\n  access-key: sommer78\n  secret-key: Yvonne@1227\n  bucket-name: laputa\n\n# Logger Config\nlogging:\n  level:\n    com.laputa.iot.upms.mapper: debug\n\n# 租户表维护\npigx:\n  tenant:\n    column: tenant_id\n    tables:\n      - sys_user\n      - sys_role\n      - sys_menu\n      - sys_dept\n      - sys_log\n      - sys_social_details\n      - sys_dict\n      - sys_dict_item\n      - sys_public_param\n      - sys_log\n      - sys_file\n      - sys_oauth_client_details', 'a55b71946a67fa2b69fe343a91a74ea7', '2021-07-10 01:33:52', '2021-07-10 01:33:52', 'nacos', '222.191.229.234', 'U', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (120, 76, 'laputa-codegen-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_codegen}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n\npigx:\n  tenant:\n    column: tenant_id\n    tables:\n      - gen_datasource_conf', '4382d5680e6661bdd01f87a66606f7bc', '2021-07-10 01:34:24', '2021-07-10 01:34:25', 'nacos', '222.191.229.234', 'U', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (121, 77, 'laputa-oa-platform-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n      ignore-urls:\n        - \'/actuator/**\'\n        - \'/v2/api-docs\'\n        - \'/editor-app/**\'\n        - \'/modeler.html\'\n        - \'/ws/**\'\nspring:\n  autoconfigure:\n    exclude: org.activiti.spring.boot.SecurityAutoConfiguration\n  activiti:\n    check-process-definitions: false\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_ac}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n\n# 租户表维护\npigx:\n  tenant:\n    column: tenant_id\n    tables:\n      - oa_leave_bill', '5c030bcc5c4bd85df7c4bc8d0bb652a5', '2021-07-10 01:34:33', '2021-07-10 01:34:33', 'nacos', '222.191.229.234', 'U', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (122, 78, 'laputa-mp-platform-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL-USER:root}\n      password: ${MYSQL-PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL-HOST:mysql.laputa-iot.com}:${MYSQL-PORT:3306}/${MYSQL-DB:laputa_iot_mp}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  resources:\n    static-locations: classpath:/static/,classpath:/views/\n\n\n# 租户表维护\npigx:\n  tenant:\n    column: tenant_id\n    tables:\n      - wx_mp_menu\n      - wx_account\n      - wx_account_fans\n      - wx_msg\n      - wx_auto_reply', 'e558abac77feaa871e6be7369f301611', '2021-07-10 01:34:55', '2021-07-10 01:34:56', 'nacos', '222.191.229.234', 'U', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (124, 79, 'laputa-pay-platform-dev.yml', 'DEFAULT_GROUP', '', '## spring security 配置\nsecurity:\n  oauth2:\n    client:\n      client-id: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      client-secret: ENC(wftU2ukw3eX1kPyOwfWG4w==)\n      scope: server\n# 数据源\nspring:\n  datasource:\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      driver-class-name: com.mysql.cj.jdbc.Driver\n      username: ${MYSQL_USER:root}\n      password: ${MYSQL_PWD:Yvonne@1227}\n      url: jdbc:mysql://${MYSQL_HOST:mysql.laputa-iot.com}:${MYSQL_PORT:3306}/${MYSQL_DB:laputa_iot_pay}?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&allowMultiQueries=true&allowPublicKeyRetrieval=true\n  freemarker:\n    allow-request-override: false\n    allow-session-override: false\n    cache: true\n    charset: UTF-8\n    check-template-location: true\n    content-type: text/html\n    enabled: true\n    expose-request-attributes: false\n    expose-session-attributes: false\n    expose-spring-macro-helpers: true\n    prefer-file-system-access: true\n    suffix: .ftl\n    template-loader-path: classpath:/templates/\n# 租户表维护\npigx:\n  pay:\n    test: lengleng\n    aliPayConfig:\n      expire-time: 30\n      return-url: http://laputa-iot.com\n      notify-url: http://ali.laputa-iot.com/pay/notify/ali/callbak\n    wxPayConfig:\n      notify-url: https://wechat.laputa-iot.com/pay/notify/wx/callbak\n    mergePayConfig:\n      return-url: http://laputa-iot.com\n      notify-url: http://wechat.laputa-iot.com/pay/notify/merge/callbak\n  xsequence:    #发号器相关配置\n    db:\n      retry-times: 3\n      table-name: pay_sequence\n  tenant:\n    column: tenant_id\n    tables:\n      - pay_channel\n      - pay_trade_order\n      - pay_goods_order\n      - pay_notify_record', '10cdc6367b3f7e765a0de863e5cdce87', '2021-07-10 01:35:27', '2021-07-10 01:35:28', 'nacos', '222.191.229.234', 'U', 'laputa-iot-dev');
INSERT INTO `his_config_info` VALUES (115, 80, 'application-dev.yml', 'DEFAULT_GROUP', '', '# 配置文件加密根密码\njasypt:\n  encryptor:\n    password: laputa\n    algorithm: PBEWithMD5AndDES\n    iv-generator-classname: org.jasypt.iv.NoIvGenerator\n\nspring:\n  redis:\n    host: redis.laputa-iot.com\n  servlet:\n    multipart:\n      max-file-size: 100MB\n      max-request-size: 100MB\n  cloud:\n    sentinel:\n      eager: true\n      filter:\n        url-patterns: /** \n      transport:\n        dashboard: pigx-sentinel:5020\n\n# 端点对外暴露\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'          \n  endpoint:\n    health:\n      show-details: ALWAYS\n# feign 相关配置\nfeign:\n  sentinel:\n    enabled: true\n  okhttp:\n    enabled: true\n  httpclient:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 20000\n        readTimeout: 20000\n  compression:\n    request:\n      enabled: true\n    response:\n      enabled: true\n\n#开启灰度\ngray:\n  rule:\n    enabled: true\n\n# mybatis-plus 配置\nmybatis-plus:\n  tenant-enable: ture\n  mapper-locations: classpath:/mapper/*Mapper.xml\n  global-config:\n    banner: false\n    db-config:\n      db-type: oracle\n      id-type: auto\n      select-strategy: not_empty\n      insert-strategy: not_empty\n      update-strategy: not_empty\n  type-handlers-package:  com.laputa.iot.common.data.handler\n  configuration:\n    jdbc-type-for-null: null\n# swagger 全局配置\nswagger:\n  enabled: true\n  title: Laputa IOT Swagger API\n  license: Powered By Laputa\n  licenseUrl: https://www.laputa-iot.com/\n  terms-of-service-url: https://laputa-iot.com/\n  contact:\n    email: sommer_jiang@163.com\n    url: https://laputa-iot.com/about.html\n  authorization:\n    name: oauth2\n    auth-regex: ^.*$\n    authorization-scope-list:\n      - scope: server\n        description: server all\n    token-url-list:\n      - http://${GATEWAY_HOST:gateway.laputa-iot.com}:${GATEWAY_PORT:9999}/auth/oauth/token\n\n# oauth2 资源服务器相关配置\nsecurity:\n  oauth2:\n    client:\n      ignore-urls:\n        - /error\n        - /actuator/**\n        - /v2/api-docs\n    resource:\n      loadBalanced: true\n      token-info-uri: http://auth.laputa-iot.com/oauth/check_token', '07ecfcea79be8f62367a409726789303', '2021-07-10 04:15:10', '2021-07-10 04:15:11', 'nacos', '222.191.229.234', 'U', 'laputa-iot-dev');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  UNIQUE INDEX `idx_user_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(0) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(0) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(0) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 11 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (4, '1', 'dev', 'dev', '开发环境', 'nacos', 1592618800112, 1592618800112);
INSERT INTO `tenant_info` VALUES (5, '1', 'prod', 'prod', '生产环境', 'nacos', 1592618913047, 1592618913047);
INSERT INTO `tenant_info` VALUES (6, '1', 'test', 'test', 'test', 'nacos', 1592620383966, 1592620383966);
INSERT INTO `tenant_info` VALUES (7, '1', '19e1e427-3a53-4c4e-8425-9be62a4db557', 'laputa-dev', '品达的开发', 'nacos', 1624948687479, 1624948687479);
INSERT INTO `tenant_info` VALUES (10, '1', 'laputa-iot-dev', 'laputa-iot-dev', '空间描述', 'nacos', 1625876065931, 1625876065931);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$PohiLv4QRi8bMPZryY4dd.pV6Vrd72kFwoH1QIuAe3V.Ut42KiQpu', 1);

SET FOREIGN_KEY_CHECKS = 1;
